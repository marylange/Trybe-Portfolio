{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/bloco16-React-Redux/16.3/my-form-2.0/src/form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport changeName from './action';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      handlerName,\n      handlerEmail,\n      nome,\n      email\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, \"Nome: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      minLength: \"40\",\n      maxLength: \"40\",\n      className: \"inputName\",\n      value: nome,\n      onChange: event => handlerName(event.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 23\n      }\n    }), \"Email: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: event => handlerEmail(event.target.value),\n      minLength: \"50\",\n      maxLength: \"50\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  nome: state.nameReducer.nome,\n  email: state.emailReducer.email\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handlerName: e => dispatch(changeName(e)),\n  handlerEmail: e => dispatch(changeEmail(e))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/bloco16-React-Redux/16.3/my-form-2.0/src/form.jsx"],"names":["React","connect","changeName","Form","Component","render","handlerName","handlerEmail","nome","email","props","event","target","value","mapStateToProps","state","nameReducer","emailReducer","mapDispatchToProps","dispatch","e","changeEmail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,UAAvB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,YAAf;AAA6BC,MAAAA,IAA7B;AAAmCC,MAAAA;AAAnC,QAA6C,KAAKC,KAAxD;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACU;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,IAA7B;AAAkC,MAAA,SAAS,EAAC,IAA5C;AAAiD,MAAA,SAAS,EAAC,WAA3D;AAAuE,MAAA,KAAK,EAAEF,IAA9E;AAAoF,MAAA,QAAQ,EAAGG,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApH;AAA0I,MAAA,QAAQ,MAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,0BAEW;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAEJ,KAAzC;AAAgD,MAAA,QAAQ,EAAGE,KAAD,IAAWJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjF;AAAuG,MAAA,SAAS,EAAC,IAAjH;AAAsH,MAAA,SAAS,EAAC,IAAhI;AAAqI,MAAA,QAAQ,MAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFX,CADJ;AASH;;AAZ8B;;AAenC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACC,WAAN,CAAkBR,IADQ;AAEhCC,EAAAA,KAAK,EAAEM,KAAK,CAACE,YAAN,CAAmBR;AAFM,CAAZ,CAAxB;;AAKA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACtCb,EAAAA,WAAW,EAAEc,CAAC,IAAID,QAAQ,CAACjB,UAAU,CAACkB,CAAD,CAAX,CADY;AAEtCb,EAAAA,YAAY,EAAEa,CAAC,IAAID,QAAQ,CAACE,WAAW,CAACD,CAAD,CAAZ;AAFW,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport changeName from './action'\n\nclass Form extends React.Component {\n    render() {\n        const { handlerName, handlerEmail, nome, email } = this.props;\n        return (\n            <fieldset>\n                Nome: <input type=\"text\" minLength=\"40\" maxLength=\"40\" className=\"inputName\" value={nome} onChange={(event) => handlerName(event.target.value)} required />\n                Email: < input type=\"email\" name=\"email\" value={email} onChange={(event) => handlerEmail(event.target.value)} minLength=\"50\" maxLength=\"50\" required />\n                {/* CPF: <input type=\"password\" name=\"password\" value={password} onChange={handler} required minLength=\"11\" maxLength=\"11\" />\n                Endere√ßo: <input type=\"text\" name=\"endereco\" maxLength=\"200\" value={endereco} onChange={handler} required />\n                Cidade: <input type=\"text\" maxLength=\"28\" required value={cidade} onChange={this.changeHandler} /> */}\n            </fieldset>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    nome: state.nameReducer.nome,\n    email: state.emailReducer.email\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    handlerName: e => dispatch(changeName(e)),\n    handlerEmail: e => dispatch(changeEmail(e))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}