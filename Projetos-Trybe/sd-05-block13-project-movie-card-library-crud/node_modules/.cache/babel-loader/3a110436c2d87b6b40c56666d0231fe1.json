{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block13-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../components';\nimport NotFound from './NotFound';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      isLoading: true,\n      notFound: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    movieAPI.getMovie(id).then(movie => {\n      this.setState({\n        movie,\n        isLoading: false\n      }).catch(() => this.setState({\n        isLoading: false,\n        notFound: true\n      }));\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 38\n      }\n    });\n    if (this.state.notFound) return /*#__PURE__*/React.createElement(Redirect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    });\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = this.state.movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"VOLTAR\"));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block13-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","Link","Loading","NotFound","movieAPI","MovieDetails","constructor","props","state","movie","isLoading","notFound","componentDidMount","id","match","params","getMovie","then","setState","catch","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../components';\nimport NotFound from './NotFound';\nimport * as movieAPI from '../services/movieAPI';\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      isLoading: true,\n      notFound: false,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    movieAPI.getMovie(id)\n      .then((movie) => {\n        this.setState({ movie, isLoading: false })\n          .catch(() => this.setState({ isLoading: false, notFound: true }));\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) return <Loading />;\n    if (this.state.notFound) return <Redirect />;\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = this.state.movie;\n    return (\n      <div data-testid=\"movie-details\">\n        <p>{title}</p>\n        <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n        <p>{`Subtitle: ${subtitle}`}</p>\n        <p>{`Storyline: ${storyline}`}</p>\n        <p>{`Genre: ${genre}`}</p>\n        <p>{`Rating: ${rating}`}</p>\n        <Link to={`/movies/${id}/edit`}>EDITAR</Link>\n        <Link to=\"/\">VOLTAR</Link>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}