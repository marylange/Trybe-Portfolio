{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Provider.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nconst SWProvider = ({\n  children\n}) => {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [filterByName, setFilterByName] = useState({\n    name: ''\n  });\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'Name',\n    sort: 'ASC'\n  });\n  console.log('filterByNumericValues', filterByNumericValues);\n  const context = {\n    column,\n    setData,\n    data,\n    setData,\n    isFetching,\n    setIsFetching,\n    filterByName,\n    setFilterByName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n    removerFiltroDaTela,\n    setRemoverFiltroDaTela\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nSWProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default SWProvider;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Provider.js"],"names":["React","useState","PropTypes","StarWarsContext","SWProvider","children","data","setData","isFetching","setIsFetching","column","setColumn","comparison","setComparison","value","setValue","sortColumn","setSortColumn","filterByName","setFilterByName","name","filterByNumericValues","setFilterByNumericValues","removerFiltroDaTela","setRemoverFiltroDaTela","order","setOrder","sort","console","log","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC;AAC/CmB,IAAAA,IAAI,EAAE;AADyC,GAAD,CAAhD;AAGA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDrB,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACsB,mBAAD,EAAsBC,sBAAtB,IAAgDvB,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC;AACjCS,IAAAA,MAAM,EAAE,MADyB;AAEjCiB,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCR,qBAArC;AACA,QAAMS,OAAO,GAAG;AACdpB,IAAAA,MADc;AAEdH,IAAAA,OAFc;AAIdD,IAAAA,IAJc;AAKdC,IAAAA,OALc;AAMdC,IAAAA,UANc;AAOdC,IAAAA,aAPc;AAQdS,IAAAA,YARc;AASdC,IAAAA,eATc;AAUdE,IAAAA,qBAVc;AAWdC,IAAAA,wBAXc;AAYdG,IAAAA,KAZc;AAadC,IAAAA,QAbc;AAcdH,IAAAA,mBAdc;AAedC,IAAAA;AAfc,GAAhB;AAkBA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEM,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,QADH,CADF;AAKD,CAxCD;;AA0CAD,UAAU,CAAC2B,SAAX,GAAuB;AACrB1B,EAAAA,QAAQ,EAAEH,SAAS,CAAC8B,IAAV,CAAeC;AADJ,CAAvB;AAIA,eAAe7B,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nconst SWProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [filterByName, setFilterByName] = useState({\n    name: '',\n  });\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'Name',\n    sort: 'ASC',\n  });\n  console.log('filterByNumericValues', filterByNumericValues);\n  const context = {\n    column,\n    setData,\n    \n    data,\n    setData,\n    isFetching,\n    setIsFetching,\n    filterByName,\n    setFilterByName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n    removerFiltroDaTela,\n    setRemoverFiltroDaTela\n  };\n\n  return (\n    <StarWarsContext.Provider value={context}>\n      {children}\n    </StarWarsContext.Provider>\n  );\n};\n\nSWProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SWProvider;\n"]},"metadata":{},"sourceType":"module"}