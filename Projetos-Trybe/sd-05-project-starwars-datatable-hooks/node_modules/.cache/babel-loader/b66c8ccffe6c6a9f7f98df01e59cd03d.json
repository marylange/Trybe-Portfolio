{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Table.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchAPIStarWarsPlanets from '../actions/action';\nimport Headers from './HeaderTabela';\nimport FiltrosDaPagina from './HeaderPagina';\nimport StarWarsContext from '../context';\n\nconst Table = () => {\n  useEffect(() => {\n    const {\n      StarWarsPlanetsAPI\n    } = this.props;\n    StarWarsPlanetsAPI();\n  }, []);\n\n  const renderTable = () => {\n    const {\n      data\n    } = this.props;\n    return data.map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, planet.url)));\n  };\n\n  const {\n    fazendoRequisicao\n  } = this.props; // console.log('table', this.props);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiltrosDaPagina, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Headers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, renderTable())), fazendoRequisicao && 'Loading...');\n};\n/*\n  {fazendoRequisicao && 'Loading...'} enquanto fazendoRequisicao\n  for true, o texto loading vai aparecer na tela.\n*/\n\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/*\n  O valor do state do verificandoRequisicaoAPI\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\n\n\nfunction filterByNumber(arrayPlanets, filterByNumericValues) {\n  if (filterByNumericValues.comparison === 'maior que') {\n    return arrayPlanets.filter(planet => Number(planet[filterByNumericValues.column]) > Number(filterByNumericValues.value));\n  }\n\n  if (filterByNumericValues.comparison === 'menor que') {\n    return arrayPlanets.filter(planet => Number(planet[filterByNumericValues.column]) < Number(filterByNumericValues.value));\n  }\n\n  if (filterByNumericValues.comparison === 'igual a') {\n    return arrayPlanets.filter(planet => Number(planet[filterByNumericValues.column]) === Number(filterByNumericValues.value));\n  }\n\n  return arrayPlanets;\n}\n/* A function filterByNumber foi retirado do código\nda minha colega de turma Nat Macedo e adpatado para o meu código*/\n\n\nconst filtraPlanetas = (planetas, filtroDeTexto, filterByNumericValues) => {\n  // console.log('', planetas);\n  // console.log('planetas', filtroDeTexto);\n  // console.log('column', filterByNumericValues);\n  let planetasExibidos = planetas;\n  filterByNumericValues.forEach(filter => {\n    planetasExibidos = filterByNumber(planetasExibidos, filter);\n  });\n\n  if (filtroDeTexto !== '') {\n    planetasExibidos = planetasExibidos.filter(planet => planet.name.toLowerCase().includes(filtroDeTexto.toLowerCase()));\n  }\n\n  return planetasExibidos;\n};\n/* os states que vou usar mapStateToProps vem do initial_state do reducer*/\n\n\nconst mapStateToProps = state => ({\n  fazendoRequisicao: state.planetsReducer.fazendoRequisicao,\n  data: filtraPlanetas(state.planetsReducer.data, state.filters.filterByName.name, state.filters.filterByNumericValues),\n  filterByNumericValues: state.filters.filterByNumericValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets())\n});\n\nTable.propTypes = {\n  data: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired,\n  fazendoRequisicao: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Table.js"],"names":["React","useState","useEffect","connect","PropTypes","fetchAPIStarWarsPlanets","Headers","FiltrosDaPagina","StarWarsContext","Table","StarWarsPlanetsAPI","props","renderTable","data","map","planet","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","fazendoRequisicao","filterByNumber","arrayPlanets","filterByNumericValues","comparison","filter","Number","column","value","filtraPlanetas","planetas","filtroDeTexto","planetasExibidos","forEach","toLowerCase","includes","mapStateToProps","state","planetsReducer","filters","filterByName","mapDispatchToProps","dispatch","propTypes","arrayOf","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchAPIStarWarsPlanets from '../actions/action';\nimport Headers from './HeaderTabela';\nimport FiltrosDaPagina from './HeaderPagina';\nimport StarWarsContext from '../context'\n\nconst Table = () => {\n  useEffect(() => {\n    const { StarWarsPlanetsAPI } = this.props;\n    StarWarsPlanetsAPI();\n  }, []);\n\n  const renderTable = () => {\n    const { data } = this.props;\n    return data.map((planet) => (\n      <tr>\n        <td>{planet.name}</td>\n        <td>{planet.rotation_period}</td>\n        <td>{planet.orbital_period}</td>\n        <td>{planet.diameter}</td>\n        <td>{planet.climate}</td>\n        <td>{planet.gravity}</td>\n        <td>{planet.terrain}</td>\n        <td>{planet.surface_water}</td>\n        <td>{planet.population}</td>\n        <td>{planet.films}</td>\n        <td>{planet.created}</td>\n        <td>{planet.edited}</td>\n        <td>{planet.url}</td>\n      </tr>\n    ));\n  }\n\n  const { fazendoRequisicao } = this.props;\n  // console.log('table', this.props);\n  return (\n    <div>\n      <div>\n        <FiltrosDaPagina />\n      </div>\n      <table>\n        <Headers />\n        <tbody>\n          {renderTable()}\n        </tbody>\n      </table>\n      {fazendoRequisicao && 'Loading...'}\n    </div>\n  );\n}\n\n/*\n  {fazendoRequisicao && 'Loading...'} enquanto fazendoRequisicao\n  for true, o texto loading vai aparecer na tela.\n*/\n\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/*\n  O valor do state do verificandoRequisicaoAPI\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\n\nfunction filterByNumber(arrayPlanets, filterByNumericValues) {\n  if (filterByNumericValues.comparison === 'maior que') {\n    return arrayPlanets\n      .filter((planet) =>\n        Number(planet[filterByNumericValues.column]) > Number(filterByNumericValues.value));\n  }\n  if (filterByNumericValues.comparison === 'menor que') {\n    return arrayPlanets\n      .filter((planet) =>\n        Number(planet[filterByNumericValues.column]) < Number(filterByNumericValues.value));\n  }\n  if (filterByNumericValues.comparison === 'igual a') {\n    return arrayPlanets\n      .filter((planet) =>\n        Number(planet[filterByNumericValues.column]) === Number(filterByNumericValues.value));\n  }\n  return arrayPlanets;\n}\n\n/* A function filterByNumber foi retirado do código\nda minha colega de turma Nat Macedo e adpatado para o meu código*/\n\nconst filtraPlanetas = (planetas, filtroDeTexto, filterByNumericValues) => {\n  // console.log('', planetas);\n  // console.log('planetas', filtroDeTexto);\n  // console.log('column', filterByNumericValues);\n\n  let planetasExibidos = planetas;\n  filterByNumericValues.forEach((filter) => {\n    planetasExibidos = filterByNumber(planetasExibidos, filter);\n  });\n\n  if (filtroDeTexto !== '') {\n    planetasExibidos = planetasExibidos.filter((planet) => planet.name\n      .toLowerCase().includes(filtroDeTexto.toLowerCase()));\n  }\n\n  return planetasExibidos;\n};\n\n/* os states que vou usar mapStateToProps vem do initial_state do reducer*/\nconst mapStateToProps = (state) => ({\n  fazendoRequisicao: state.planetsReducer.fazendoRequisicao,\n  data: filtraPlanetas(\n    state.planetsReducer.data,\n    state.filters.filterByName.name,\n    state.filters.filterByNumericValues),\n  filterByNumericValues: state.filters.filterByNumericValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets()),\n});\n\nTable.propTypes = {\n  data: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired,\n  fazendoRequisicao: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */\n"]},"metadata":{},"sourceType":"module"}