{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js\";\nimport React, { useState, useContext } from 'react';\nimport SWContext from '../context/StarWarsContext'; // import PropTypes from 'prop-types';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\nconst AllColumns = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity', 'terrain', 'surface_water', 'population', 'films', 'created', 'edited', 'url'];\nconst options = ['Comparação', 'maior que', 'menor que', 'igual a'];\n\nfunction FiltrosDaPagina() {\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    filterByName,\n    setFilterByName,\n    order,\n    setOrder,\n    setRemoverFiltroDaTela\n  } = useContext(SWContext); // console.log('filterByNumericValues', filterByNumericValues);\n  // console.log('filterByName', filterByName);\n\n  function handleColumnChange(event) {\n    setColumn(event.target.value);\n  }\n\n  function handleComparisonChange(event) {\n    setComparison(event.target.value);\n  }\n\n  function handleValueChange(event) {\n    setValue(event.target.value);\n  }\n\n  function showFilters() {\n    const teste = filterByNumericValues.map(element => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setFilterByNumericValues(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    console.log('showFilters', teste);\n    return teste;\n  }\n\n  function rederSelects() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: column,\n      onChange: handleColumnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, columns.filter(option => !filterByNumericValues.map(filter => filter.column).includes(option)).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 30\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: handleComparisonChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, options.filter(option => !filterByNumericValues.map(filter => filter.column).includes(option)).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 30\n      }\n    }, option))));\n  }\n\n  function handleSelectOrderColumn(event) {\n    setSortColumn(event.target.value);\n  }\n\n  function handleSortChange(event) {\n    setSortOrder(event.target.value);\n  }\n\n  function inputsRenderFiltersOrder() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ASC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"ASC\",\n      value: \"ASC\",\n      \"data-testid\": \"column-sort-input-asc\",\n      checked: sortOrder === 'ASC',\n      onChange: handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), \"ASC\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"DESC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"DESC\",\n      value: \"DESC\",\n      \"data-testid\": \"column-sort-input-desc\",\n      checked: sortOrder === 'DESC',\n      onChange: handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), \"DESC\"));\n  }\n\n  function addFilter(filter) {\n    let filters = [...filterByNumericValues];\n    filters.push(filter);\n    return filters;\n  }\n\n  function renderFiltrosValoresNum() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, rederSelects(), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: handleValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => setFilterByNumericValues(addFilter({\n        column,\n        comparison,\n        value\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, \"Filtrar\"));\n  }\n\n  function renderFiltersOrder() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Ordem\"), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-sort\",\n      onChange: handleSelectOrderColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, AllColumns.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 39\n      }\n    }, option))), inputsRenderFiltersOrder(), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"column-sort-button\",\n      onClick: () => {\n        // console.log('Ordem-coluna', sortOrder, sortColumn)\n        setOrder({\n          column: sortColumn,\n          order: sortOrder\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, \"Filtrar\"));\n  }\n\n  function renderProcurar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, \"Procurar: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => setFilterByName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, renderProcurar(), renderFiltrosValoresNum(), renderFiltersOrder(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, \"Filtros \", showFilters(filterByNumericValues))));\n} // const mapStateToProps = (state) => {\n//   console.log('filterByNumericValues', state);\n//   return {\n//     data: state.planetsReducer.data,\n//     filters: state.filters.filterByNumericValues,\n//     stateToPropsSort: state.filters.sort,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n//   dispatchFilterValues: (\n//     column,\n//     comparison,\n//     value,\n//   ) => dispatch(filterValues(column, comparison, value)),\n//   dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n//   dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort)),\n// });\n// FiltrosDaPagina.propTypes = {\n//   dispatchSearch: PropTypes.func.isRequired,\n//   dispatchFilterValues: PropTypes.func.isRequired,\n//   filters: PropTypes.func.isRequired,\n//   dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n//   dispatchOrdenarColumns: PropTypes.func.isRequired,\n// };\n\n\nexport default FiltrosDaPagina;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js"],"names":["React","useState","useContext","SWContext","columns","AllColumns","options","FiltrosDaPagina","column","setColumn","comparison","setComparison","value","setValue","sortColumn","setSortColumn","sortOrder","setSortOrder","filterByNumericValues","setFilterByNumericValues","filterByName","setFilterByName","order","setOrder","setRemoverFiltroDaTela","handleColumnChange","event","target","handleComparisonChange","handleValueChange","showFilters","teste","map","element","console","log","rederSelects","filter","option","includes","handleSelectOrderColumn","handleSortChange","inputsRenderFiltersOrder","addFilter","filters","push","renderFiltrosValoresNum","renderFiltersOrder","renderProcurar"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport SWContext from '../context/StarWarsContext';\n// import PropTypes from 'prop-types';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst AllColumns = [\n  'name',\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'climate',\n  'gravity',\n  'terrain',\n  'surface_water',\n  'population',\n  'films',\n  'created',\n  'edited',\n  'url',\n];\n\nconst options = [\n  'Comparação',\n  'maior que',\n  'menor que',\n  'igual a',\n];\n\nfunction FiltrosDaPagina() {\n  const [column, setColumn] = useState('');\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    filterByName,\n    setFilterByName,\n    order,\n    setOrder,\n    setRemoverFiltroDaTela,\n  } = useContext(SWContext);\n  // console.log('filterByNumericValues', filterByNumericValues);\n  // console.log('filterByName', filterByName);\n  function handleColumnChange(event) {\n    setColumn(event.target.value);\n  }\n\n  function handleComparisonChange(event) {\n    setComparison(event.target.value);\n  }\n\n  function handleValueChange(event) {\n    setValue(event.target.value);\n  }\n\n  function showFilters() {\n    const teste = filterByNumericValues.map((element) =>\n      <div data-testid=\"filter\">\n        <button onClick={() => setFilterByNumericValues()}>X</button>\n        <p>{element.column} {element.comparison} {element.value}</p>\n      </div>,\n    );\n    console.log('showFilters', teste);\n    return teste;\n  }\n\n  function rederSelects() {\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={column}\n          onChange={handleColumnChange}\n        >\n          {columns\n            .filter((option) =>\n              !filterByNumericValues.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          onChange={handleComparisonChange}\n        >\n          {options\n            .filter((option) =>\n              !filterByNumericValues.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n      </div>\n    );\n  }\n\n  function handleSelectOrderColumn(event) {\n    setSortColumn(event.target.value);\n  }\n\n  function handleSortChange(event) {\n    setSortOrder(event.target.value);\n  }\n\n  function inputsRenderFiltersOrder() {\n    return (\n      <div>\n        <label htmlFor=\"ASC\">\n          <input\n            type=\"radio\"\n            id=\"ASC\"\n            value=\"ASC\"\n            data-testid=\"column-sort-input-asc\"\n            checked={sortOrder === 'ASC'}\n            onChange={handleSortChange}\n          />ASC\n        </label>\n\n        <label htmlFor=\"DESC\">\n          <input\n            type=\"radio\"\n            id=\"DESC\"\n            value=\"DESC\"\n            data-testid=\"column-sort-input-desc\"\n            checked={sortOrder === 'DESC'}\n            onChange={handleSortChange}\n          />DESC\n        </label>\n      </div>\n    );\n  }\n\n  function addFilter(filter) {\n    let filters = [...filterByNumericValues];\n    filters.push(filter);\n    return filters;\n  }\n\n  function renderFiltrosValoresNum() {\n    return (\n      <div>\n        {rederSelects()}\n        <input type=\"number\" data-testid=\"value-filter\" onChange={handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => setFilterByNumericValues(addFilter({\n              column,\n              comparison,\n              value,\n            }))}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  function renderFiltersOrder() {\n    return (\n      <div className=\"order\">\n        <p>Ordem</p>\n        <select data-testid=\"column-sort\" onChange={handleSelectOrderColumn}>\n          {AllColumns.map((option) => <option value={option}>{option}</option>)}\n        </select>\n        {inputsRenderFiltersOrder()}\n        <button\n          data-testid=\"column-sort-button\"\n          onClick={() => {\n            // console.log('Ordem-coluna', sortOrder, sortColumn)\n            setOrder(\n              {\n                column: sortColumn,\n                order: sortOrder,\n              })\n          }}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  function renderProcurar() {\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => setFilterByName(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {renderProcurar()}\n      {renderFiltrosValoresNum()}\n      {renderFiltersOrder()}\n      <div>\n        <p>Filtros {showFilters(filterByNumericValues)}</p>\n      </div>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   console.log('filterByNumericValues', state);\n//   return {\n//     data: state.planetsReducer.data,\n//     filters: state.filters.filterByNumericValues,\n//     stateToPropsSort: state.filters.sort,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n//   dispatchFilterValues: (\n//     column,\n//     comparison,\n//     value,\n//   ) => dispatch(filterValues(column, comparison, value)),\n//   dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n//   dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort)),\n// });\n\n// FiltrosDaPagina.propTypes = {\n//   dispatchSearch: PropTypes.func.isRequired,\n//   dispatchFilterValues: PropTypes.func.isRequired,\n//   filters: PropTypes.func.isRequired,\n//   dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n//   dispatchOrdenarColumns: PropTypes.func.isRequired,\n// };\n\nexport default FiltrosDaPagina;\n"]},"metadata":{},"sourceType":"module"}