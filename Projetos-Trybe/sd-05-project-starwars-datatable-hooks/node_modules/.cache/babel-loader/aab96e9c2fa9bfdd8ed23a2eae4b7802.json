{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Provider.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nconst SWProvider = ({\n  children\n}) => {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [filterByName, setFilterByName] = useState({\n    name: ''\n  });\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'Name',\n    sort: 'ASC'\n  });\n  console.log('filterByNumericValues', filterByNumericValues);\n  const context = {\n    data,\n    setData,\n    isFetching,\n    setIsFetching,\n    filterByName,\n    setFilterByName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n    removerFiltroDaTela,\n    setRemoverFiltroDaTela\n  };\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nSWProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default SWProvider;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/Provider.js"],"names":["React","useState","PropTypes","StarWarsContext","SWProvider","children","data","setData","isFetching","setIsFetching","filterByName","setFilterByName","name","filterByNumericValues","setFilterByNumericValues","removerFiltroDaTela","setRemoverFiltroDaTela","order","setOrder","column","sort","console","log","context","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC/CW,IAAAA,IAAI,EAAE;AADyC,GAAD,CAAhD;AAGA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACc,mBAAD,EAAsBC,sBAAtB,IAAgDf,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC;AACjCkB,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCT,qBAArC;AACA,QAAMU,OAAO,GAAG;AACdjB,IAAAA,IADc;AAEdC,IAAAA,OAFc;AAGdC,IAAAA,UAHc;AAIdC,IAAAA,aAJc;AAKdC,IAAAA,YALc;AAMdC,IAAAA,eANc;AAOdE,IAAAA,qBAPc;AAQdC,IAAAA,wBARc;AASdG,IAAAA,KATc;AAUdC,IAAAA,QAVc;AAWdH,IAAAA,mBAXc;AAYdC,IAAAA;AAZc,GAAhB;AAeA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEO,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QADH,CADF;AAKD,CAjCD;;AAmCAD,UAAU,CAACoB,SAAX,GAAuB;AACrBnB,EAAAA,QAAQ,EAAEH,SAAS,CAACuB,IAAV,CAAeC;AADJ,CAAvB;AAIA,eAAetB,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from '../context/StarWarsContext';\n\nconst SWProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [filterByName, setFilterByName] = useState({\n    name: ''\n  });\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'Name',\n    sort: 'ASC',\n  });\n  console.log('filterByNumericValues', filterByNumericValues);\n  const context = {\n    data,\n    setData,\n    isFetching,\n    setIsFetching,\n    filterByName,\n    setFilterByName,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n    removerFiltroDaTela,\n    setRemoverFiltroDaTela\n  };\n\n  return (\n    <StarWarsContext.Provider value={context}>\n      {children}\n    </StarWarsContext.Provider>\n  );\n};\n\nSWProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SWProvider;\n"]},"metadata":{},"sourceType":"module"}