{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nconst FiltrosDaPagina = () => {\n  const [column, setColumn] = useState('');\n  const [comparison, setcomparison] = useState('');\n  const [value, setValue] = useState(0);\n\n  handleColumnChange = () => {\n    setColumn({\n      column\n    });\n  };\n\n  handleComparisonChange = () => {\n    setcomparison({\n      comparison\n    });\n  };\n\n  handleValueChange = () => {\n    setValue({\n      value\n    });\n  };\n\n  showFilters = filters => {\n    const {\n      dispatchRemoverFiltroDaTela\n    } = this.props;\n    console.log('showFilters', filters);\n    const teste = filters.map(element => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => dispatchRemoverFiltroDaTela(element.column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    return teste;\n  };\n\n  renderProcurar = () => {\n    const {\n      dispatchSearch\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Procurar: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => dispatchSearch(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  };\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n\n  renderFiltrosValoresNum = () => {\n    const {\n      dispatchFilterValues,\n      filters\n    } = this.props; // console.log('filters', filters);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: this.state.column,\n      onChange: this.handleColumnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \" \", columns.filter(option => !filters.map(filter => filter.column).includes(option)).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      value: this.state.comparison,\n      onChange: this.handleComparisonChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"option\", {\n      defaultValue: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Compara\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Filtrar\"));\n  };\n\n  const {\n    filters\n  } = this.props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, this.renderProcurar(), this.renderFiltrosValoresNum(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Filtros \", this.showFilters(filters))));\n};\n\nconst mapStateToProps = state => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    removerElementoDaTela: state.filters.removerElementoDaTela\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: column => dispatch(removerFiltroDaTela(column))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js"],"names":["React","useState","connect","PropTypes","filtrarPlanetsName","filterValues","removerFiltroDaTela","columns","FiltrosDaPagina","column","setColumn","comparison","setcomparison","value","setValue","handleColumnChange","handleComparisonChange","handleValueChange","showFilters","filters","dispatchRemoverFiltroDaTela","props","console","log","teste","map","element","renderProcurar","dispatchSearch","event","target","renderFiltrosValoresNum","dispatchFilterValues","state","filter","option","includes","mapStateToProps","data","planetsReducer","filterByNumericValues","removerElementoDaTela","mapDispatchToProps","dispatch","name","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst FiltrosDaPagina = () => {\n  const [column, setColumn] = useState('');\n  const [comparison, setcomparison] = useState('');\n  const [value, setValue] = useState(0);\n\n  handleColumnChange = () => {\n    setColumn({ column });\n  }\n\n  handleComparisonChange = () => {\n    setcomparison({ comparison });\n  }\n\n  handleValueChange = () => {\n    setValue({ value });\n  }\n\n  showFilters = (filters) => {\n    const { dispatchRemoverFiltroDaTela } = this.props;\n    console.log('showFilters', filters);\n    const teste = filters.map((element) =>\n      <div data-testid=\"filter\">\n        <button onClick={() => dispatchRemoverFiltroDaTela(element.column)}>X</button>\n        <p>{element.column} {element.comparison} {element.value}</p>\n      </div>,\n    );\n    return teste;\n  }\n\n  renderProcurar = () => {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n  renderFiltrosValoresNum = () => {\n    const { dispatchFilterValues, filters } = this.props;\n    // console.log('filters', filters);\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={this.state.column}\n          onChange={this.handleColumnChange}\n        > {/* Gera as options da coluna */}\n          {columns\n            .filter((option) => !filters.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          value={this.state.comparison}\n          onChange={this.handleComparisonChange}\n        > {/* Gera as options de comparação */}\n          <option defaultValue>Comparação</option>\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n        {/* Gera o input com o value de comparação */}\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n\n  const { filters } = this.props;\n  return (\n    <div>\n      {this.renderProcurar()}\n      {this.renderFiltrosValoresNum()}\n      <div>\n        <p>Filtros {this.showFilters(filters)}</p>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    removerElementoDaTela: state.filters.removerElementoDaTela,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}