{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js\";\nimport React, { useState, useContext } from 'react';\nimport SWContext from '../context/StarWarsContext'; // import PropTypes from 'prop-types';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\nconst AllColumns = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity', 'terrain', 'surface_water', 'population', 'films', 'created', 'edited', 'url'];\nconst options = ['Comparação', 'maior que', 'menor que', 'igual a'];\n\nfunction FiltrosDaPagina() {\n  const [teste, setTeste] = useState({\n    column: '',\n    comparison: '',\n    value: 0\n  });\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState('');\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    filterByName,\n    setFilterByName,\n    order,\n    setOrder\n  } = useContext(SWContext); // console.log('filterByNumericValues', filterByNumericValues);\n  // console.log('filterByName', filterByName);\n\n  function handleColumnChange(event) {\n    setColumn(event.target.value);\n  }\n\n  function handleComparisonChange(event) {\n    setComparison(event.target.value);\n  }\n\n  function handleValueChange(event) {\n    setValue(event.target.value);\n  }\n\n  function showFilters() {\n    const teste = filterByNumericValues.map(element => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setRemoverFiltroDaTela(element.column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    console.log('showFilters', teste);\n    return teste;\n  }\n\n  function rederSelects() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: column,\n      onChange: handleColumnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, columns.filter(option => !filterByNumericValues.map(filter => filter.column).includes(option)).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 30\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: handleComparisonChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, options.filter(option => !filterByNumericValues.map(filter => filter.column).includes(option)).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 30\n      }\n    }, option))));\n  }\n\n  function handleSelectOrderColumn(event) {\n    setSortColumn(event.target.value);\n  }\n\n  function handleSortChange(event) {\n    setSortOrder(event.target.value);\n  }\n\n  function inputsRenderFiltersOrder() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ASC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"ASC\",\n      value: \"ASC\",\n      \"data-testid\": \"column-sort-input-asc\",\n      checked: sortOrder === 'ASC',\n      onChange: handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), \"ASC\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"DESC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"DESC\",\n      value: \"DESC\",\n      \"data-testid\": \"column-sort-input-desc\",\n      checked: sortOrder === 'DESC',\n      onChange: handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), \"DESC\"));\n  }\n\n  function renderFiltrosValoresNum() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, rederSelects(), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: handleValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => setFilterByNumericValues([{\n        column,\n        comparison,\n        value\n      }]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"Filtrar\"));\n  }\n\n  function renderFiltersOrder() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Ordem\"), /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"column-sort\",\n      onChange: handleSelectOrderColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, AllColumns.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 39\n      }\n    }, option))), inputsRenderFiltersOrder(), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"column-sort-button\",\n      onClick: () => {\n        // console.log('Ordem-coluna', sortOrder, sortColumn)\n        setOrder({\n          column: sortColumn,\n          order: sortOrder\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, \"Filtrar\"));\n  }\n\n  function renderProcurar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, \"Procurar: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => setFilterByName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, renderProcurar(), renderFiltrosValoresNum(), renderFiltersOrder(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Filtros \", showFilters(filterByNumericValues))));\n} // const mapStateToProps = (state) => {\n//   console.log('filterByNumericValues', state);\n//   return {\n//     data: state.planetsReducer.data,\n//     filters: state.filters.filterByNumericValues,\n//     stateToPropsSort: state.filters.sort,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n//   dispatchFilterValues: (\n//     column,\n//     comparison,\n//     value,\n//   ) => dispatch(filterValues(column, comparison, value)),\n//   dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n//   dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort)),\n// });\n// FiltrosDaPagina.propTypes = {\n//   dispatchSearch: PropTypes.func.isRequired,\n//   dispatchFilterValues: PropTypes.func.isRequired,\n//   filters: PropTypes.func.isRequired,\n//   dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n//   dispatchOrdenarColumns: PropTypes.func.isRequired,\n// };\n\n\nexport default FiltrosDaPagina;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-project-starwars-datatable-hooks/src/components/HeaderPagina.js"],"names":["React","useState","useContext","SWContext","columns","AllColumns","options","FiltrosDaPagina","teste","setTeste","column","comparison","value","setComparison","setValue","sortColumn","setSortColumn","sortOrder","setSortOrder","removerFiltroDaTela","setRemoverFiltroDaTela","filterByNumericValues","setFilterByNumericValues","filterByName","setFilterByName","order","setOrder","handleColumnChange","event","setColumn","target","handleComparisonChange","handleValueChange","showFilters","map","element","console","log","rederSelects","filter","option","includes","handleSelectOrderColumn","handleSortChange","inputsRenderFiltersOrder","renderFiltrosValoresNum","renderFiltersOrder","renderProcurar"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport SWContext from '../context/StarWarsContext';\n// import PropTypes from 'prop-types';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst AllColumns = [\n  'name',\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'climate',\n  'gravity',\n  'terrain',\n  'surface_water',\n  'population',\n  'films',\n  'created',\n  'edited',\n  'url',\n];\n\nconst options = [\n  'Comparação',\n  'maior que',\n  'menor que',\n  'igual a',\n];\n\nfunction FiltrosDaPagina() {\n  const [teste, setTeste] = useState({\n    column: '',\n    comparison: '',\n    value: 0,\n  });\n  const [comparison, setComparison] = useState('');\n  const [value, setValue] = useState(0);\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const [removerFiltroDaTela, setRemoverFiltroDaTela] = useState('');\n  const {\n    filterByNumericValues,\n    setFilterByNumericValues,\n    filterByName,\n    setFilterByName,\n    order,\n    setOrder,\n  } = useContext(SWContext);\n  // console.log('filterByNumericValues', filterByNumericValues);\n  // console.log('filterByName', filterByName);\n  function handleColumnChange(event) {\n    setColumn(event.target.value);\n  }\n\n  function handleComparisonChange(event) {\n    setComparison(event.target.value);\n  }\n\n  function handleValueChange(event) {\n    setValue(event.target.value);\n  }\n\n  function showFilters() {\n    const teste = filterByNumericValues.map((element) =>\n      <div data-testid=\"filter\">\n        <button onClick={() => setRemoverFiltroDaTela(element.column)}>X</button>\n        <p>{element.column} {element.comparison} {element.value}</p>\n      </div>,\n    );\n    console.log('showFilters', teste);\n    return teste;\n  }\n\n  function rederSelects() {\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={column}\n          onChange={handleColumnChange}\n        >\n          {columns\n            .filter((option) =>\n              !filterByNumericValues.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          onChange={handleComparisonChange}\n        >\n          {options\n            .filter((option) =>\n              !filterByNumericValues.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n      </div>\n    );\n  }\n\n  function handleSelectOrderColumn(event) {\n    setSortColumn(event.target.value);\n  }\n\n  function handleSortChange(event) {\n    setSortOrder(event.target.value);\n  }\n\n  function inputsRenderFiltersOrder() {\n    return (\n      <div>\n        <label htmlFor=\"ASC\">\n          <input\n            type=\"radio\"\n            id=\"ASC\"\n            value=\"ASC\"\n            data-testid=\"column-sort-input-asc\"\n            checked={sortOrder === 'ASC'}\n            onChange={handleSortChange}\n          />ASC\n        </label>\n\n        <label htmlFor=\"DESC\">\n          <input\n            type=\"radio\"\n            id=\"DESC\"\n            value=\"DESC\"\n            data-testid=\"column-sort-input-desc\"\n            checked={sortOrder === 'DESC'}\n            onChange={handleSortChange}\n          />DESC\n        </label>\n      </div>\n    );\n  }\n\n  function renderFiltrosValoresNum() {\n    return (\n      <div>\n        {rederSelects()}\n        <input type=\"number\" data-testid=\"value-filter\" onChange={handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => setFilterByNumericValues([{\n              column,\n              comparison,\n              value,\n            }])}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  function renderFiltersOrder() {\n    return (\n      <div className=\"order\">\n        <p>Ordem</p>\n        <select data-testid=\"column-sort\" onChange={handleSelectOrderColumn}>\n          {AllColumns.map((option) => <option value={option}>{option}</option>)}\n        </select>\n        {inputsRenderFiltersOrder()}\n        <button\n          data-testid=\"column-sort-button\"\n          onClick={() => {\n            // console.log('Ordem-coluna', sortOrder, sortColumn)\n            setOrder(\n              {\n                column: sortColumn,\n                order: sortOrder,\n              })\n          }}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  function renderProcurar() {\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => setFilterByName(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {renderProcurar()}\n      {renderFiltrosValoresNum()}\n      {renderFiltersOrder()}\n      <div>\n        <p>Filtros {showFilters(filterByNumericValues)}</p>\n      </div>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   console.log('filterByNumericValues', state);\n//   return {\n//     data: state.planetsReducer.data,\n//     filters: state.filters.filterByNumericValues,\n//     stateToPropsSort: state.filters.sort,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n//   dispatchFilterValues: (\n//     column,\n//     comparison,\n//     value,\n//   ) => dispatch(filterValues(column, comparison, value)),\n//   dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n//   dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort)),\n// });\n\n// FiltrosDaPagina.propTypes = {\n//   dispatchSearch: PropTypes.func.isRequired,\n//   dispatchFilterValues: PropTypes.func.isRequired,\n//   filters: PropTypes.func.isRequired,\n//   dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n//   dispatchOrdenarColumns: PropTypes.func.isRequired,\n// };\n\nexport default FiltrosDaPagina;\n"]},"metadata":{},"sourceType":"module"}