{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block14-project-frontend-online-store-2/src/components/Busca.js\";\nimport React from 'react';\nimport * as apiFunction from '../services/api';\n\nclass Busca extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [{\n        id: 1,\n        name: 'Todos'\n      }],\n      searchText: '',\n      searchCategoryName: '',\n      searchCategoryId: '',\n      produtosPorCategoria: []\n    };\n    this.capturingText = this.capturingText.bind(this);\n    this.capturingCategory = this.capturingCategory.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    apiFunction.getCategories().then(response => {\n      this.setState({\n        options: [{\n          id: 1,\n          name: 'Selecione uma categoria'\n        }, ...response]\n      });\n    });\n  }\n\n  capturingText(event) {\n    this.setState({\n      searchText: event.target.value\n    });\n  }\n\n  capturingCategory(event) {\n    const id = this.state.options.find(categoria => categoria.name === event.target.value).id;\n    this.setState({\n      searchCategoryName: event.target.value,\n      searchCategoryId: id\n    });\n\n    if (event.target.value === 'Selecione uma categoria') {\n      this.setState({\n        produtosPorCategoria: []\n      });\n    }\n  }\n\n  handleClick(event) {\n    apiFunction.getProductsFromCategoryAndQuery(this.state.searchCategoryId, this.state.searchText).then(resolve => {\n      console.log(resolve.results);\n      this.setState({\n        produtosPorCategoria: resolve.results\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      options,\n      produtosPorCategoria\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchText\",\n      onChange: this.capturingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"searchCategory\",\n      onChange: this.capturingCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, options.map(categoria => /*#__PURE__*/React.createElement(\"option\", {\n      key: categoria.id,\n      \"data-testid\": \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, categoria.name))), /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.handleClick,\n      type: \"button\",\n      value: \"Buscar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), produtosPorCategoria.map(produto => /*#__PURE__*/React.createElement(\"div\", {\n      key: produto.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: produto.thumbnail,\n      alt: produto.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, produto.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"R$\", produto.price.toFixed(2))))));\n  }\n\n}\n\nexport default Busca;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block14-project-frontend-online-store-2/src/components/Busca.js"],"names":["React","apiFunction","Busca","Component","constructor","props","state","options","id","name","searchText","searchCategoryName","searchCategoryId","produtosPorCategoria","capturingText","bind","capturingCategory","handleClick","componentDidMount","getCategories","then","response","setState","event","target","value","find","categoria","getProductsFromCategoryAndQuery","resolve","console","log","results","preventDefault","render","map","produto","thumbnail","title","price","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as apiFunction from '../services/api';\n\nclass Busca extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [{ id: 1, name: 'Todos' }],\n      searchText: '',\n      searchCategoryName: '',\n      searchCategoryId: '',\n      produtosPorCategoria: [],\n    };\n    this.capturingText = this.capturingText.bind(this);\n    this.capturingCategory = this.capturingCategory.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    apiFunction.getCategories().then((response) => {\n      this.setState({ options: [{ id: 1, name: 'Selecione uma categoria' }, ...response] });\n    });\n  }\n\n  capturingText(event) {\n    this.setState({ searchText: event.target.value });\n  }\n\n  capturingCategory(event) {\n    const id = this.state.options.find((categoria) => categoria.name === event.target.value).id;\n    this.setState({\n      searchCategoryName: event.target.value,\n      searchCategoryId: id,\n    });\n\n    if (event.target.value === 'Selecione uma categoria') {\n      this.setState({ produtosPorCategoria: [] });\n    }\n  }\n\n  handleClick(event) {\n    apiFunction\n      .getProductsFromCategoryAndQuery(\n        this.state.searchCategoryId,\n        this.state.searchText,\n      )\n      .then((resolve) => {\n        console.log(resolve.results);\n        this.setState({ produtosPorCategoria: resolve.results });\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    const { options, produtosPorCategoria } = this.state;\n    return (\n      <div>\n        <form>\n          <h1 data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </h1>\n          <input type=\"text\" name=\"searchText\" onChange={this.capturingText} />\n          <select name=\"searchCategory\" onChange={this.capturingCategory}>\n            {options.map((categoria) => (\n              <option key={categoria.id} data-testid=\"category\">\n                {categoria.name}\n              </option>\n            ))}\n          </select>\n          <input onClick={this.handleClick} type=\"button\" value=\"Buscar\" />\n          {produtosPorCategoria.map((produto) => (\n            <div key={produto.id}>\n              <img src={produto.thumbnail} alt={produto.title} />\n              <h4>{produto.title}</h4>\n              <p>R${produto.price.toFixed(2)}</p>\n            </div>\n          ))}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Busca;\n"]},"metadata":{},"sourceType":"module"}