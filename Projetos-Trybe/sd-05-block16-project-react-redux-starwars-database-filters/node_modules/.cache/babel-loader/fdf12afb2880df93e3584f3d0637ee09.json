{"ast":null,"code":"import _objectSpread from \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { FILTER_NAME_PLANET, FILTER_VALUES, SET_VALUE_OPTIONS } from '../actions/actionFilterPlanetsName';\nconst STATE_INICIAL = {\n  filterByName: {\n    name: ''\n  },\n  filterByNumericValues: [],\n  options: {\n    population: '',\n    orbital_period: action.orbital_period,\n    diameter: action.diameter,\n    rotation_period: action.rotation_period,\n    surface_water: action.surface_water\n  }\n};\n\nconst ReducerFilter = (state = STATE_INICIAL, action) => {\n  console.log('action reducer', action);\n\n  switch (action.type) {\n    case FILTER_NAME_PLANET:\n      return _objectSpread({}, state, {\n        filterByName: {\n          name: action.value\n        }\n      });\n\n    case FILTER_VALUES:\n      return _objectSpread({}, state, {\n        filterByNumericValues: [...state.filterByNumericValues, {\n          column: action.column,\n          comparison: action.comparison,\n          value: action.value\n        }]\n      });\n\n    case SET_VALUE_OPTIONS:\n      return _objectSpread({}, state, {\n        options: [...state.options, {\n          population: action.population,\n          orbital_period: action.orbital_period,\n          diameter: action.diameter,\n          rotation_period: action.rotation_period,\n          surface_water: action.surface_water\n        }]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ReducerFilter;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/reducers/reducerFilter.js"],"names":["FILTER_NAME_PLANET","FILTER_VALUES","SET_VALUE_OPTIONS","STATE_INICIAL","filterByName","name","filterByNumericValues","options","population","orbital_period","action","diameter","rotation_period","surface_water","ReducerFilter","state","console","log","type","value","column","comparison"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,aAA7B,EAA4CC,iBAA5C,QAAqE,oCAArE;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GADM;AAIpBC,EAAAA,qBAAqB,EAAE,EAJH;AAKpBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,EADL;AAEPC,IAAAA,cAAc,EAAEC,MAAM,CAACD,cAFhB;AAGPE,IAAAA,QAAQ,EAAED,MAAM,CAACC,QAHV;AAIPC,IAAAA,eAAe,EAAEF,MAAM,CAACE,eAJjB;AAKPC,IAAAA,aAAa,EAAEH,MAAM,CAACG;AALf;AALW,CAAtB;;AAcA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBO,MAAxB,KAAmC;AACvDM,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAA9B;;AACA,UAAQA,MAAM,CAACQ,IAAf;AACE,SAAKlB,kBAAL;AACE,+BACKe,KADL;AAEEX,QAAAA,YAAY,EAAE;AACZC,UAAAA,IAAI,EAAEK,MAAM,CAACS;AADD;AAFhB;;AAMF,SAAKlB,aAAL;AACE,+BACKc,KADL;AAEET,QAAAA,qBAAqB,EAAE,CACrB,GAAGS,KAAK,CAACT,qBADY,EAErB;AAAEc,UAAAA,MAAM,EAAEV,MAAM,CAACU,MAAjB;AAAyBC,UAAAA,UAAU,EAAEX,MAAM,CAACW,UAA5C;AAAwDF,UAAAA,KAAK,EAAET,MAAM,CAACS;AAAtE,SAFqB;AAFzB;;AAOF,SAAKjB,iBAAL;AACE,+BACKa,KADL;AAEER,QAAAA,OAAO,EAAE,CACP,GAAGQ,KAAK,CAACR,OADF,EAEP;AACEC,UAAAA,UAAU,EAAEE,MAAM,CAACF,UADrB;AAEEC,UAAAA,cAAc,EAAEC,MAAM,CAACD,cAFzB;AAGEE,UAAAA,QAAQ,EAAED,MAAM,CAACC,QAHnB;AAIEC,UAAAA,eAAe,EAAEF,MAAM,CAACE,eAJ1B;AAKEC,UAAAA,aAAa,EAAEH,MAAM,CAACG;AALxB,SAFO;AAFX;;AAaF;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAnCD;;AAqCA,eAAeD,aAAf","sourcesContent":["import { FILTER_NAME_PLANET, FILTER_VALUES, SET_VALUE_OPTIONS } from '../actions/actionFilterPlanetsName';\n\nconst STATE_INICIAL = {\n  filterByName: {\n    name: '',\n  },\n  filterByNumericValues: [],\n  options: {\n    population: '',\n    orbital_period: action.orbital_period,\n    diameter: action.diameter,\n    rotation_period: action.rotation_period,\n    surface_water: action.surface_water,\n  }\n};\n\nconst ReducerFilter = (state = STATE_INICIAL, action) => {\n  console.log('action reducer', action);\n  switch (action.type) {\n    case FILTER_NAME_PLANET:\n      return {\n        ...state,\n        filterByName: {\n          name: action.value,\n        },\n      };\n    case FILTER_VALUES:\n      return {\n        ...state,\n        filterByNumericValues: [\n          ...state.filterByNumericValues,\n          { column: action.column, comparison: action.comparison, value: action.value },\n        ],\n      };\n    case SET_VALUE_OPTIONS:\n      return {\n        ...state,\n        options: [\n          ...state.options,\n          {\n            population: action.population,\n            orbital_period: action.orbital_period,\n            diameter: action.diameter,\n            rotation_period: action.rotation_period,\n            surface_water: action.surface_water,\n          }\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ReducerFilter;\n"]},"metadata":{},"sourceType":"module"}