{"ast":null,"code":"import _objectSpread from \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { FILTER_NAME_PLANET, FILTER_VALUES, REMOVE_FILTRO, ORDENAR_COLUMNS } from '../actions/actionFilterPlanetsName';\nconst STATE_INICIAL = {\n  filterByName: {\n    name: ''\n  },\n  filterByNumericValues: [],\n  order: {\n    column: 'Name',\n    sort: 'ASC'\n  }\n};\n\nconst filterNamePlanet = (state = STATE_INICIAL, action) => {\n  return _objectSpread({}, state, {\n    filterByName: {\n      name: action.name\n    }\n  });\n};\n\nconst filters = (state = STATE_INICIAL, action) => {\n  console.log('action reducer', action);\n\n  switch (action.type) {\n    case FILTER_NAME_PLANET:\n      return {};\n\n    case FILTER_VALUES:\n      return _objectSpread({}, state, {\n        filterByNumericValues: [...state.filterByNumericValues, {\n          column: action.column,\n          comparison: action.comparison,\n          value: action.value\n        }]\n      });\n\n    case REMOVE_FILTRO:\n      return _objectSpread({}, state, {\n        filterByNumericValues: [...state.filterByNumericValues.filter(filtro => filtro.column !== action.column)]\n      });\n\n    case ORDENAR_COLUMNS:\n      return _objectSpread({}, state, {\n        order: {\n          column: action.column,\n          sort: action.sort\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default filters;","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/reducers/reducerFilter.js"],"names":["FILTER_NAME_PLANET","FILTER_VALUES","REMOVE_FILTRO","ORDENAR_COLUMNS","STATE_INICIAL","filterByName","name","filterByNumericValues","order","column","sort","filterNamePlanet","state","action","filters","console","log","type","comparison","value","filter","filtro"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,aAA7B,EAA4CC,aAA5C,EAA2DC,eAA3D,QAAkF,oCAAlF;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GADM;AAIpBC,EAAAA,qBAAqB,EAAE,EAJH;AAKpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,IAAI,EAAE;AAFD;AALa,CAAtB;;AAWA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AAC1D,2BACKD,KADL;AAEEP,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEO,MAAM,CAACP;AADD;AAFhB;AAMD,CAPD;;AASA,MAAMQ,OAAO,GAAG,CAACF,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACjDE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAA9B;;AACA,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKjB,kBAAL;AACE,aAAO,EAAP;;AAGF,SAAKC,aAAL;AACE,+BACKW,KADL;AAEEL,QAAAA,qBAAqB,EAAE,CACrB,GAAGK,KAAK,CAACL,qBADY,EAErB;AAAEE,UAAAA,MAAM,EAAEI,MAAM,CAACJ,MAAjB;AAAyBS,UAAAA,UAAU,EAAEL,MAAM,CAACK,UAA5C;AAAwDC,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAAtE,SAFqB;AAFzB;;AAOF,SAAKjB,aAAL;AACE,+BACKU,KADL;AAEEL,QAAAA,qBAAqB,EAAE,CACrB,GAAGK,KAAK,CAACL,qBAAN,CACAa,MADA,CACQC,MAAD,IAAYA,MAAM,CAACZ,MAAP,KAAkBI,MAAM,CAACJ,MAD5C,CADkB;AAFzB;;AAOF,SAAKN,eAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAEI,MAAM,CAACJ,MADV;AACkBC,UAAAA,IAAI,EAAEG,MAAM,CAACH;AAD/B;AAFT;;AAMF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAjCD;;AAmCA,eAAeE,OAAf","sourcesContent":["import { FILTER_NAME_PLANET, FILTER_VALUES, REMOVE_FILTRO, ORDENAR_COLUMNS } from '../actions/actionFilterPlanetsName';\n\nconst STATE_INICIAL = {\n  filterByName: {\n    name: '',\n  },\n  filterByNumericValues: [],\n  order: {\n    column: 'Name',\n    sort: 'ASC',\n  },\n};\n\nconst filterNamePlanet = (state = STATE_INICIAL, action) => {\n  return {\n    ...state,\n    filterByName: {\n      name: action.name,\n    },\n  }\n}\n\nconst filters = (state = STATE_INICIAL, action) => {\n  console.log('action reducer', action);\n  switch (action.type) {\n    case FILTER_NAME_PLANET:\n      return {\n        \n      };\n    case FILTER_VALUES:\n      return {\n        ...state,\n        filterByNumericValues: [\n          ...state.filterByNumericValues,\n          { column: action.column, comparison: action.comparison, value: action.value },\n        ],\n      };\n    case REMOVE_FILTRO:\n      return {\n        ...state,\n        filterByNumericValues: [\n          ...state.filterByNumericValues\n            .filter((filtro) => filtro.column !== action.column),\n        ],\n      };\n    case ORDENAR_COLUMNS:\n      return {\n        ...state,\n        order: {\n          column: action.column, sort: action.sort,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filters;\n"]},"metadata":{},"sourceType":"module"}