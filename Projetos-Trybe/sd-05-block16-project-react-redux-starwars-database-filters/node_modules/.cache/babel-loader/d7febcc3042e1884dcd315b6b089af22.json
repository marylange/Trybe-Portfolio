{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\nimport { ordenarColumns } from '../actions/actionFilterPlanetsName';\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\nconst AllColumns = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity', 'terrain', 'surface_water', 'population', 'films', 'created', 'edited', 'url'];\nconst options = ['Comparação', 'maior que', 'menor que', 'igual a'];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSelectOrderColumn = this.handleSelectOrderColumn.bind(this);\n    this.handleSortChange = this.handleSortChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  showFilters(filters) {\n    const dispatchRemoverFiltroDaTela = this.props.dispatchRemoverFiltroDaTela;\n    console.log('showFilters', filters);\n    const teste = filters.map(element => React.createElement(\"div\", {\n      \"data-testid\": \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => dispatchRemoverFiltroDaTela(element.column),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    return teste;\n  }\n\n  columnOptions(filtrosAtivosDeComparacaoColunasEValor) {\n    console.log(\"coisa\", filtrosAtivosDeComparacaoColunasEValor);\n    const colunasAtivosDeComparacaoColunasEValor = filtrosAtivosDeComparacaoColunasEValor.map(filter => filter.column);\n    const colunasASeremExibidas = columns.filter(column => !colunasAtivosDeComparacaoColunasEValor.includes(column));\n    return colunasASeremExibidas.map(column => this.renderColumnOption(column));\n  }\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n\n  rederSelects() {\n    const filters = this.props.filters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: this.state.column,\n      onChange: this.handleColumnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.columnOptions(filters)), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: this.handleComparisonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, options.filter(option => !filters.map(filter => filter.column).includes(option)).map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, option))));\n  }\n\n  renderProcurar() {\n    const dispatchSearch = this.props.dispatchSearch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Procurar: \"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => dispatchSearch(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n  renderFiltrosValoresNum() {\n    const dispatchFilterValues = this.props.dispatchFilterValues;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.rederSelects(), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n  handleSelectOrderColumn(event) {\n    this.setState({\n      sortColumn: event.target.value\n    }, () => {\n      console.log(\"state\", this.state);\n    });\n  }\n\n  handleSortChange(event) {\n    this.setState({\n      order: event.target.value\n    }, () => {\n      console.log(\"state\", this.state);\n    });\n  }\n\n  inputsRenderFiltersOrder() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ASC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"ASC\",\n      value: \"ASC\",\n      \"data-testid\": \"column-sort-input\",\n      checked: this.state.order === \"ASC\",\n      onChange: this.handleSortChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), \"ASC\"), React.createElement(\"label\", {\n      htmlFor: \"DESC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"DESC\",\n      value: \"DESC\",\n      \"data-testid\": \"column-sort-input\",\n      checked: this.state.order === \"DESC\",\n      onChange: this.handleSortChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), \"DESC\"));\n  }\n\n  renderFiltersOrder() {\n    const dispatchOrdenarColumns = this.props.dispatchOrdenarColumns;\n    return React.createElement(\"div\", {\n      className: \"order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Ordem\"), React.createElement(\"select\", {\n      \"data-testid\": \"column-sort\",\n      onChange: this.handleSelectOrderColumn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, AllColumns.map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, option))), this.inputsRenderFiltersOrder(), React.createElement(\"button\", {\n      \"data-testid\": \"column-sort-button\",\n      onClick: () => dispatchOrdenarColumns(this.state.sortColumn, this.state.order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n  render() {\n    const filters = this.props.filters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.renderProcurar(), this.renderFiltrosValoresNum(), this.renderFiltersOrder(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Filtros \", this.showFilters(filters))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    stateToPropsSort: state.filters.sort\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: column => dispatch(removerFiltroDaTela(column)),\n  dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n  dispatchOrdenarColumns: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js"],"names":["React","connect","PropTypes","filtrarPlanetsName","filterValues","removerFiltroDaTela","ordenarColumns","columns","AllColumns","options","FiltrosDaPagina","Component","constructor","props","state","column","comparison","value","handleColumnChange","bind","handleComparisonChange","handleValueChange","handleSelectOrderColumn","handleSortChange","event","setState","target","showFilters","filters","dispatchRemoverFiltroDaTela","console","log","teste","map","element","columnOptions","filtrosAtivosDeComparacaoColunasEValor","colunasAtivosDeComparacaoColunasEValor","filter","colunasASeremExibidas","includes","renderColumnOption","rederSelects","option","renderProcurar","dispatchSearch","renderFiltrosValoresNum","dispatchFilterValues","sortColumn","order","inputsRenderFiltersOrder","renderFiltersOrder","dispatchOrdenarColumns","render","mapStateToProps","data","planetsReducer","filterByNumericValues","stateToPropsSort","sort","mapDispatchToProps","dispatch","name","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA;;;;AAIA,MAAMC,OAAO,GAAG,CACd,QADc,EAEd,YAFc,EAGd,gBAHc,EAId,UAJc,EAKd,iBALc,EAMd,eANc,CAAhB;AASA,MAAMC,UAAU,GAAG,CACjB,MADiB,EAEjB,iBAFiB,EAGjB,gBAHiB,EAIjB,UAJiB,EAKjB,SALiB,EAMjB,SANiB,EAOjB,SAPiB,EAQjB,eARiB,EASjB,YATiB,EAUjB,OAViB,EAWjB,SAXiB,EAYjB,QAZiB,EAajB,KAbiB,CAAnB;AAgBA,MAAMC,OAAO,GAAG,CACd,YADc,EAEd,WAFc,EAGd,WAHc,EAId,SAJc,CAAhB;;AAOA,MAAMC,eAAN,SAA8BV,KAAK,CAACW,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BH,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,kBAAkB,CAACM,KAAD,EAAQ;AACxB,SAAKC,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAES,KAAK,CAACE,MAAN,CAAaT;AAAvB,KAAd;AACD;;AAEDG,EAAAA,sBAAsB,CAACI,KAAD,EAAQ;AAC5B,SAAKC,QAAL,CAAc;AAAET,MAAAA,UAAU,EAAEQ,KAAK,CAACE,MAAN,CAAaT;AAA3B,KAAd;AACD;;AAEDI,EAAAA,iBAAiB,CAACG,KAAD,EAAQ;AACvB,SAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,KAAK,CAACE,MAAN,CAAaT;AAAtB,KAAd;AACD;;AAEDU,EAAAA,WAAW,CAACC,OAAD,EAAU;AAAA,UACXC,2BADW,GACqB,KAAKhB,KAD1B,CACXgB,2BADW;AAEnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,OAA3B;AACA,UAAMI,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAaC,OAAD,IACxB;AAAK,qBAAY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAML,2BAA2B,CAACK,OAAO,CAACnB,MAAT,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAImB,OAAO,CAACnB,MAAZ,OAAqBmB,OAAO,CAAClB,UAA7B,OAA0CkB,OAAO,CAACjB,KAAlD,CAFF,CADY,CAAd;AAMA,WAAOe,KAAP;AACD;;AAIDG,EAAAA,aAAa,CAACC,sCAAD,EAAyC;AACpDN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,sCAArB;AACA,UAAMC,sCAAsC,GAAGD,sCAAsC,CAACH,GAAvC,CAA4CK,MAAD,IAAYA,MAAM,CAACvB,MAA9D,CAA/C;AACA,UAAMwB,qBAAqB,GAAGhC,OAAO,CAAC+B,MAAR,CAAgBvB,MAAD,IAAY,CAACsB,sCAAsC,CAACG,QAAvC,CAAgDzB,MAAhD,CAA5B,CAA9B;AAEA,WAAOwB,qBAAqB,CAACN,GAAtB,CAA2BlB,MAAD,IAAY,KAAK0B,kBAAL,CAAwB1B,MAAxB,CAAtC,CAAP;AACD;AAED;;;;;;;;;;;;;AAYA2B,EAAAA,YAAY,GAAG;AAAA,UACLd,OADK,GACO,KAAKf,KADZ,CACLe,OADK;AAEb,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,eADd;AAEE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,MAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKG,kBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKiB,aAAL,CAAmBP,OAAnB,CALH,CADF,EAQE;AACE,qBAAY,mBADd;AAEE,MAAA,QAAQ,EAAE,KAAKR,sBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGX,OAAO,CACL6B,MADF,CACUK,MAAD,IAAY,CAACf,OAAO,CAACK,GAAR,CAAaK,MAAD,IAAYA,MAAM,CAACvB,MAA/B,EAAuCyB,QAAvC,CAAgDG,MAAhD,CADtB,EAEEV,GAFF,CAEOU,MAAD,IAAY;AAAQ,MAAA,KAAK,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,MAAxB,CAFlB,CAJH,CARF,CADF;AAmBD;;AAEDC,EAAAA,cAAc,GAAG;AAAA,UACPC,cADO,GACY,KAAKhC,KADjB,CACPgC,cADO;AAEf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,aAFd;AAGE,MAAA,QAAQ,EAAGrB,KAAD,IAAWqB,cAAc,CAACrB,KAAK,CAACE,MAAN,CAAaT,KAAd,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAUD;;AAED6B,EAAAA,uBAAuB,GAAG;AAAA,UAChBC,oBADgB,GACS,KAAKlC,KADd,CAChBkC,oBADgB;AAExB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,YAAL,EADH,EAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,qBAAY,cAAjC;AAAgD,MAAA,QAAQ,EAAE,KAAKrB,iBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AACE,qBAAY,eADd;AAEE,MAAA,OAAO,EACL,MAAM0B,oBAAoB,CACxB,KAAKjC,KAAL,CAAWC,MADa,EAExB,KAAKD,KAAL,CAAWE,UAFa,EAGxB,KAAKF,KAAL,CAAWG,KAHa,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAeD;;AAEDK,EAAAA,uBAAuB,CAACE,KAAD,EAAQ;AAC7B,SAAKC,QAAL,CAAc;AAAEuB,MAAAA,UAAU,EAAExB,KAAK,CAACE,MAAN,CAAaT;AAA3B,KAAd,EAAkD,MAAM;AAAEa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKjB,KAA1B;AAAmC,KAA7F;AACD;;AAEDS,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,SAAKC,QAAL,CAAc;AAAEwB,MAAAA,KAAK,EAAEzB,KAAK,CAACE,MAAN,CAAaT;AAAtB,KAAd,EAA6C,MAAM;AAAEa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKjB,KAA1B;AAAmC,KAAxF;AACD;;AAEDoC,EAAAA,wBAAwB,GAAG;AACzB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,KAFL;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,qBAAY,mBAJd;AAKE,MAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWmC,KAAX,KAAqB,KALhC;AAME,MAAA,QAAQ,EAAE,KAAK1B,gBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,QADF,EAWE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,qBAAY,mBAJd;AAKE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWmC,KAAX,KAAqB,MALhC;AAME,MAAA,QAAQ,EAAE,KAAK1B,gBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SAXF,CADF;AAwBD;;AAED4B,EAAAA,kBAAkB,GAAG;AAAA,UACXC,sBADW,GACgB,KAAKvC,KADrB,CACXuC,sBADW;AAEnB,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAQ,qBAAY,aAApB;AAAkC,MAAA,QAAQ,EAAE,KAAK9B,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,UAAU,CAACyB,GAAX,CAAgBU,MAAD,IAAY;AAAQ,MAAA,KAAK,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,MAAxB,CAA3B,CADH,CAFF,EAKG,KAAKO,wBAAL,EALH,EAME;AACE,qBAAY,oBADd;AAEE,MAAA,OAAO,EAAE,MAAME,sBAAsB,CACnC,KAAKtC,KAAL,CAAWkC,UADwB,EAEnC,KAAKlC,KAAL,CAAWmC,KAFwB,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAgBD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCzB,OADD,GACa,KAAKf,KADlB,CACCe,OADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKgB,cAAL,EADH,EAEG,KAAKE,uBAAL,EAFH,EAGG,KAAKK,kBAAL,EAHH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY,KAAKxB,WAAL,CAAiBC,OAAjB,CAAZ,CADF,CAJF,CADF;AAUD;;AAxL2C;;AA2L9C,MAAM0B,eAAe,GAAIxC,KAAD,IAAW;AACjCgB,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCjB,KAArC;AACA,SAAO;AACLyC,IAAAA,IAAI,EAAEzC,KAAK,CAAC0C,cAAN,CAAqBD,IADtB;AAEL3B,IAAAA,OAAO,EAAEd,KAAK,CAACc,OAAN,CAAc6B,qBAFlB;AAGLC,IAAAA,gBAAgB,EAAE5C,KAAK,CAACc,OAAN,CAAc+B;AAH3B,GAAP;AAKD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,cAAc,EAAGiB,IAAD,IAAUD,QAAQ,CAAC1D,kBAAkB,CAAC2D,IAAD,CAAnB,CADM;AAExCf,EAAAA,oBAAoB,EAAE,CACpBhC,MADoB,EAEpBC,UAFoB,EAGpBC,KAHoB,KAIjB4C,QAAQ,CAACzD,YAAY,CAACW,MAAD,EAASC,UAAT,EAAqBC,KAArB,CAAb,CAN2B;AAOxCY,EAAAA,2BAA2B,EAAGd,MAAD,IAAY8C,QAAQ,CAACxD,mBAAmB,CAACU,MAAD,CAApB,CAPT;AAQxCqC,EAAAA,sBAAsB,EAAE,CAACrC,MAAD,EAAS4C,IAAT,KAAkBE,QAAQ,CAACvD,cAAc,CAACS,MAAD,EAAS4C,IAAT,CAAf;AARV,CAAf,CAA3B;;AAWAjD,eAAe,CAACqD,SAAhB,GAA4B;AAC1BlB,EAAAA,cAAc,EAAE3C,SAAS,CAAC8D,IAAV,CAAeC,UADL;AAE1BlB,EAAAA,oBAAoB,EAAE7C,SAAS,CAAC8D,IAAV,CAAeC,UAFX;AAG1BrC,EAAAA,OAAO,EAAE1B,SAAS,CAAC8D,IAAV,CAAeC,UAHE;AAI1BpC,EAAAA,2BAA2B,EAAE3B,SAAS,CAAC8D,IAAV,CAAeC,UAJlB;AAK1Bb,EAAAA,sBAAsB,EAAElD,SAAS,CAAC8D,IAAV,CAAeC;AALb,CAA5B;AAQA,eAAehE,OAAO,CAACqD,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClD,eAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\nimport { ordenarColumns } from '../actions/actionFilterPlanetsName';\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst AllColumns = [\n  'name',\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'climate',\n  'gravity',\n  'terrain',\n  'surface_water',\n  'population',\n  'films',\n  'created',\n  'edited',\n  'url',\n];\n\nconst options = [\n  'Comparação',\n  'maior que',\n  'menor que',\n  'igual a',\n];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSelectOrderColumn = this.handleSelectOrderColumn.bind(this);\n    this.handleSortChange = this.handleSortChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  handleValueChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  showFilters(filters) {\n    const { dispatchRemoverFiltroDaTela } = this.props;\n    console.log('showFilters', filters);\n    const teste = filters.map((element) =>\n      <div data-testid=\"filter\">\n        <button onClick={() => dispatchRemoverFiltroDaTela(element.column)}>X</button>\n        <p>{element.column} {element.comparison} {element.value}</p>\n      </div>,\n    );\n    return teste;\n  }\n\n  \n\n  columnOptions(filtrosAtivosDeComparacaoColunasEValor) {\n    console.log(\"coisa\", filtrosAtivosDeComparacaoColunasEValor);\n    const colunasAtivosDeComparacaoColunasEValor = filtrosAtivosDeComparacaoColunasEValor.map((filter) => filter.column);\n    const colunasASeremExibidas = columns.filter((column) => !colunasAtivosDeComparacaoColunasEValor.includes(column));\n\n    return colunasASeremExibidas.map((column) => this.renderColumnOption(column))\n  }\n\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n  rederSelects() {\n    const { filters } = this.props;\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={this.state.column}\n          onChange={this.handleColumnChange}\n        >\n          {this.columnOptions(filters)}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          onChange={this.handleComparisonChange}\n        >\n          {options\n            .filter((option) => !filters.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n      </div>\n    );\n  }\n\n  renderProcurar() {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  renderFiltrosValoresNum() {\n    const { dispatchFilterValues } = this.props;\n    return (\n      <div>\n        {this.rederSelects()}\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  handleSelectOrderColumn(event) {\n    this.setState({ sortColumn: event.target.value }, () => { console.log(\"state\", this.state); });\n  }\n\n  handleSortChange(event) {\n    this.setState({ order: event.target.value }, () => { console.log(\"state\", this.state); });\n  }\n\n  inputsRenderFiltersOrder() {\n    return (\n      <div>\n        <label htmlFor=\"ASC\">\n          <input\n            type=\"radio\"\n            id=\"ASC\"\n            value=\"ASC\"\n            data-testid=\"column-sort-input\"\n            checked={this.state.order === \"ASC\"}\n            onChange={this.handleSortChange}\n          />ASC\n        </label>\n        <label htmlFor=\"DESC\">\n          <input\n            type=\"radio\"\n            id=\"DESC\"\n            value=\"DESC\"\n            data-testid=\"column-sort-input\"\n            checked={this.state.order === \"DESC\"}\n            onChange={this.handleSortChange}\n          />DESC\n        </label>\n      </div>\n    );\n  }\n\n  renderFiltersOrder() {\n    const { dispatchOrdenarColumns } = this.props;\n    return (\n      <div className=\"order\">\n        <p>Ordem</p>\n        <select data-testid=\"column-sort\" onChange={this.handleSelectOrderColumn}>\n          {AllColumns.map((option) => <option value={option}>{option}</option>)}\n        </select>\n        {this.inputsRenderFiltersOrder()}\n        <button\n          data-testid=\"column-sort-button\"\n          onClick={() => dispatchOrdenarColumns(\n            this.state.sortColumn,\n            this.state.order,\n          )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  render() {\n    const { filters } = this.props;\n    return (\n      <div>\n        {this.renderProcurar()}\n        {this.renderFiltrosValoresNum()}\n        {this.renderFiltersOrder()}\n        <div>\n          <p>Filtros {this.showFilters(filters)}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    stateToPropsSort: state.filters.sort,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n  dispatchOrdenarColumns: (column, sort) => dispatch(ordenarColumns(column, sort)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n  dispatchOrdenarColumns: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}