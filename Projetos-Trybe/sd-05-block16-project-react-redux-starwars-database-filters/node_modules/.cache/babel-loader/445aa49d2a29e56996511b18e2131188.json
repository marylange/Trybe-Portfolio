{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\nimport './style.css';\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\nconst AllColumns = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'gravity', 'terrain', 'surface_water', 'population', 'films', 'created', 'edited', 'url'];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  showFilters(filters) {\n    const dispatchRemoverFiltroDaTela = this.props.dispatchRemoverFiltroDaTela;\n    console.log('showFilters', filters);\n    const teste = filters.map(element => React.createElement(\"div\", {\n      \"data-testid\": \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => dispatchRemoverFiltroDaTela(element.column),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    return teste;\n  }\n\n  renderProcurar() {\n    const dispatchSearch = this.props.dispatchSearch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Procurar: \"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => dispatchSearch(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n\n  renderFiltrosValoresNum() {\n    const _this$props = this.props,\n          dispatchFilterValues = _this$props.dispatchFilterValues,\n          filters = _this$props.filters; // console.log('filters', filters);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      value: this.state.column,\n      onChange: this.handleColumnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \", columns.filter(option => !filters.map(filter => filter.column).includes(option)).map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, option))), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      value: this.state.comparison,\n      onChange: this.handleComparisonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" \", React.createElement(\"option\", {\n      defaultValue: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"igual a\")), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Filtrar\"), React.createElement(\"div\", {\n      className: \"order\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Ordem\"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, AllColumns.filter(option => !filters.map(filter => filter.column).includes(option)).map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, option))), React.createElement(\"label\", {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    const filters = this.props.filters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.renderProcurar(), this.renderFiltrosValoresNum(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Filtros \", this.showFilters(filters))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    removerElementoDaTela: state.filters.removerElementoDaTela\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: column => dispatch(removerFiltroDaTela(column))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js"],"names":["React","connect","PropTypes","filtrarPlanetsName","filterValues","removerFiltroDaTela","columns","AllColumns","FiltrosDaPagina","Component","constructor","props","state","column","comparison","value","handleColumnChange","bind","handleComparisonChange","handleValueChange","event","setState","target","showFilters","filters","dispatchRemoverFiltroDaTela","console","log","teste","map","element","renderProcurar","dispatchSearch","renderFiltrosValoresNum","dispatchFilterValues","filter","option","includes","render","mapStateToProps","data","planetsReducer","filterByNumericValues","removerElementoDaTela","mapDispatchToProps","dispatch","name","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { removerFiltroDaTela } from '../actions/actionFilterPlanetsName';\nimport './style.css';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst AllColumns = [\n  'name',\n  'rotation_period',\n  'orbital_period',\n  'diameter',\n  'climate',\n  'gravity',\n  'terrain',\n  'surface_water',\n  'population',\n  'films',\n  'created',\n  'edited',\n  'url',\n];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  handleValueChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  showFilters(filters) {\n    const { dispatchRemoverFiltroDaTela } = this.props;\n    console.log('showFilters', filters);\n    const teste = filters.map((element) =>\n      <div data-testid=\"filter\">\n        <button onClick={() => dispatchRemoverFiltroDaTela(element.column)}>X</button>\n        <p>{element.column} {element.comparison} {element.value}</p>\n      </div>,\n    );\n    return teste;\n  }\n\n  renderProcurar() {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  /*\n  {columns\n    .filter((option) => !filters.map((filter) => filter.column).includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n  O primeiro map da função renderColumns faz a filtragem do state de\n  filters(column: action.column, comparison: action.comparison, value: action.value),\n  retirando somente column. O segundo filter retira\n  de columns(array que foi declarado acima)a opção que incluso em currentFilterColumns e\n  o terceiro map cria options para cada coluna restante\n  */\n\n  renderFiltrosValoresNum() {\n    const { dispatchFilterValues, filters } = this.props;\n    // console.log('filters', filters);\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={this.state.column}\n          onChange={this.handleColumnChange}\n        > {/* Gera as options da coluna */}\n          {columns\n            .filter((option) => !filters.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          value={this.state.comparison}\n          onChange={this.handleComparisonChange}\n        > {/* Gera as options de comparação */}\n          <option defaultValue>Comparação</option>\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n        {/* Gera o input com o value de comparação */}\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n        <div className=\"order\">\n          <p>Ordem</p>\n          <select>\n          {AllColumns\n            .filter((option) => !filters.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n          </select>\n          <label htmlFor=\"\">\n            <input />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { filters } = this.props;\n    return (\n      <div>\n        {this.renderProcurar()}\n        {this.renderFiltrosValoresNum()}\n        <div>\n          <p>Filtros {this.showFilters(filters)}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n    removerElementoDaTela: state.filters.removerElementoDaTela,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n  dispatchRemoverFiltroDaTela: (column) => dispatch(removerFiltroDaTela(column)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n  dispatchRemoverFiltroDaTela: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}