{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchAPIStarWarsPlanets } from '../redux/actions/action';\nimport Headers from './Headers';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const StarWarsPlanetsAPI = this.props.StarWarsPlanetsAPI;\n    console.log('api', StarWarsPlanetsAPI);\n    StarWarsPlanetsAPI();\n    /*\n      componentDidMount,quando montado, toda vez que o\n      componente é renderizado é feita umaChamada na API.\n    */\n  }\n\n  render() {\n    const resultPlanets = this.props.resultPlanets;\n    console.log('resultPlanets', resultPlanets);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Headers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, resultPlanets.map(planet => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, planet.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, planet.rotation_period), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, planet.diameter), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, planet.climate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, planet.gravity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, planet.terrain), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, planet.surface_water));\n    }))));\n  }\n\n}\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/* os states que vou usar mapStateToProps vem do reducer initial_state*/\n\n/*\n  O valor do statedoReducerVerificaActions\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    fazendoRequisicao: state.fazendoRequisicao,\n    resultPlanets: state.resultPlanets\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets())\n});\n\nTable.propTypes = {\n  resultPlanets: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","PropTypes","fetchAPIStarWarsPlanets","Headers","Table","Component","componentDidMount","StarWarsPlanetsAPI","props","console","log","render","resultPlanets","map","planet","name","rotation_period","diameter","climate","gravity","terrain","surface_water","mapStateToProps","state","fazendoRequisicao","mapDispatchToProps","dispatch","propTypes","arrayOf","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,yBAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,kBADU,GACa,KAAKC,KADlB,CACVD,kBADU;AAElBE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,kBAAnB;AACAA,IAAAA,kBAAkB;AAClB;;;;AAID;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCC,aADD,GACmB,KAAKJ,KADxB,CACCI,aADD;AAEPH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,aAA7B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,aAAa,CAACC,GAAd,CAAmBC,MAAD,IAAY;AAC7B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,MAAM,CAACC,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,MAAM,CAACE,eAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,MAAM,CAACG,QAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,MAAM,CAACI,OAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,MAAM,CAACK,OAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,MAAM,CAACM,OAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,MAAM,CAACO,aAAZ,CAPF,CADF;AAWD,KAZA,CADH,CAFF,CADF,CADF;AAuBD;;AArCiC;AAwCpC;;;;;AAKA;;AACA;;;;;;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAO;AACLC,IAAAA,iBAAiB,EAAED,KAAK,CAACC,iBADpB;AAELZ,IAAAA,aAAa,EAAEW,KAAK,CAACX;AAFhB,GAAP;AAID,CAND;;AAQA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,kBAAkB,EAAE,MAAMmB,QAAQ,CAACxB,uBAAuB,EAAxB;AADM,CAAf,CAA3B;;AAIAE,KAAK,CAACuB,SAAN,GAAkB;AAChBf,EAAAA,aAAa,EAAEX,SAAS,CAAC2B,OAAV,CAAkBC,UADjB;AAEhBtB,EAAAA,kBAAkB,EAAEN,SAAS,CAAC6B,IAAV,CAAeD;AAFnB,CAAlB;AAKA,eAAe7B,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf;AACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchAPIStarWarsPlanets } from '../redux/actions/action';\nimport Headers from './Headers';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const { StarWarsPlanetsAPI } = this.props;\n    console.log('api', StarWarsPlanetsAPI);\n    StarWarsPlanetsAPI();\n    /*\n      componentDidMount,quando montado, toda vez que o\n      componente é renderizado é feita umaChamada na API.\n    */\n  }\n\n  render() {\n    const { resultPlanets } = this.props;\n    console.log('resultPlanets', resultPlanets);\n    return (\n      <div>\n        <table>\n        <Headers />\n          <tbody>\n            {resultPlanets.map((planet) => {\n              return (\n                <tr>\n                  <td>{planet.name}</td>\n                  <td>{planet.rotation_period}</td>\n                  <td>{planet.diameter}</td>\n                  <td>{planet.climate}</td>\n                  <td>{planet.gravity}</td>\n                  <td>{planet.terrain}</td>\n                  <td>{planet.surface_water}</td>\n                </tr>\n              );\n            })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/* os states que vou usar mapStateToProps vem do reducer initial_state*/\n/*\n  O valor do statedoReducerVerificaActions\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    fazendoRequisicao: state.fazendoRequisicao,\n    resultPlanets: state.resultPlanets,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets()),\n});\n\nTable.propTypes = {\n  resultPlanets: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */\n"]},"metadata":{},"sourceType":"module"}