{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  renderProcurar() {\n    const dispatchSearch = this.props.dispatchSearch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Procurar: \"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      id: \"search\",\n      onChange: event => dispatchSearch(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n  renderFiltrosValoresNum() {\n    const dispatchFilterValues = this.props.dispatchFilterValues;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      onChange: this.handleColumnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Coluna\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"population\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"orbital_period\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"diameter\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"rotation_period\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"surface_water\")), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: this.handleComparisonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Maior que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Menor que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Igual\")), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderProcurar(), this.renderFiltrosValoresNum());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('filterByNumericValues', state.column);\n  return {\n    column: state.reducerFilter.column,\n    comparison: state.reducerFilter.comparison,\n    value: state.reducerFilter.value,\n    data: state.planetsReducer.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js"],"names":["React","connect","PropTypes","filtrarPlanetsName","filterValues","FiltrosDaPagina","Component","constructor","props","state","column","comparison","value","handleColumnChange","bind","handleComparisonChange","event","setState","target","handleValueChange","renderProcurar","dispatchSearch","renderFiltrosValoresNum","dispatchFilterValues","render","mapStateToProps","console","log","reducerFilter","data","planetsReducer","mapDispatchToProps","dispatch","name","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n    }\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  handleValueChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  renderProcurar() {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          id=\"search\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  renderFiltrosValoresNum() {\n    const { dispatchFilterValues } = this.props;\n    return (\n      <div>\n        <select data-testid=\"column-filter\" onChange={this.handleColumnChange}>\n          <option disabled selected>Coluna</option>\n          <option>population</option>\n          <option>orbital_period</option>\n          <option>diameter</option>\n          <option>rotation_period</option>\n          <option>surface_water</option>\n        </select>\n        <select data-testid=\"comparison-filter\" onChange={this.handleComparisonChange}>\n          <option disabled selected>Comparação</option>\n          <option>Maior que</option>\n          <option>Menor que</option>\n          <option>Igual</option>\n        </select>\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderProcurar()}\n        {this.renderFiltrosValoresNum()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('filterByNumericValues', state.column);\n  return {\n    column: state.reducerFilter.column,\n    comparison: state.reducerFilter.comparison,\n    value: state.reducerFilter.value,\n    data: state.planetsReducer.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}