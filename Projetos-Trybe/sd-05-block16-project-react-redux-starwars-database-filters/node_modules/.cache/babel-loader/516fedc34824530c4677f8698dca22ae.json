{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = ['Coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n      remover: false\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  renderProcurar() {\n    const dispatchSearch = this.props.dispatchSearch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Procurar: \"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => dispatchSearch(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n  removerElementoDaTela(column) {\n    console.log(column);\n  }\n\n  showFilters(filters) {\n    console.log('showFilters', filters);\n    const teste = filters.map(element => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.removerElementoDaTela(element.column),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"p\", {\n      \"data-testid\": \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, element.column, \" \", element.comparison, \" \", element.value)));\n    return teste;\n  }\n\n  renderFiltrosValoresNum() {\n    const _this$props = this.props,\n          dispatchFilterValues = _this$props.dispatchFilterValues,\n          filters = _this$props.filters; // console.log('filters', filters);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      onChange: this.handleColumnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, columns.filter(option => !filters.map(filter => filter.column).includes(option)).map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, option))), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: this.handleComparisonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"igual a\")), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n  render() {\n    const filters = this.props.filters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.renderProcurar(), this.renderFiltrosValoresNum(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Filtrar \", this.showFilters(filters))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js"],"names":["React","connect","PropTypes","filtrarPlanetsName","filterValues","columns","FiltrosDaPagina","Component","constructor","props","state","column","comparison","value","remover","handleColumnChange","bind","handleComparisonChange","handleValueChange","event","setState","target","renderProcurar","dispatchSearch","removerElementoDaTela","console","log","showFilters","filters","teste","map","element","renderFiltrosValoresNum","dispatchFilterValues","filter","option","includes","render","mapStateToProps","data","planetsReducer","filterByNumericValues","mapDispatchToProps","dispatch","name","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\n\n/*\ncolumns representa a lista com todas as opções possíveis de coluna\n*/\n\nconst columns = [\n  'Coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n      remover: false,\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  handleValueChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  renderProcurar() {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  removerElementoDaTela(column) {\n    console.log(column)\n  }\n\n  showFilters(filters) {\n    console.log('showFilters', filters)\n    const teste = filters.map((element) =>\n      <div>\n        <button onClick={() => this.removerElementoDaTela(element.column)}>X</button>\n        <p data-testid='filter'>{element.column} {element.comparison} {element.value}</p>\n      </div>\n    )\n    return teste;\n  }\n\n  renderFiltrosValoresNum() {\n    const { dispatchFilterValues, filters } = this.props;\n    // console.log('filters', filters);\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          onChange={this.handleColumnChange}\n        >\n          {columns\n            .filter((option) => !filters.map((filter) => filter.column).includes(option))\n            .map((option) => <option value={option}>{option}</option>)}\n          {/*\n            O primeiro map da função renderColumns faz a filtragem do state de\n            filters(column: action.column, comparison: action.comparison, value: action.value),\n            retirando somente column. O segundo filter retira de columns(array que foi declarado acima)\n            a opção que incluso em currentFilterColumns e\n            o terceiro map cria options para cada coluna restante\n          */}\n        </select>\n        <select data-testid=\"comparison-filter\" onChange={this.handleComparisonChange}>\n          <option disabled selected>Comparação</option>\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  render() {\n    const { filters } = this.props;\n    return (\n      <div>\n        {this.renderProcurar()}\n        {this.renderFiltrosValoresNum()}\n        <div>\n          <p>Filtrar {this.showFilters(filters)}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.filters.filterByNumericValues,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  filters: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}