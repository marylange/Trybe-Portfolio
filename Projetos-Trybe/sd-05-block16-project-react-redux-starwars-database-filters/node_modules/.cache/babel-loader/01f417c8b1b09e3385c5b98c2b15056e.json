{"ast":null,"code":"import StarWarsPlanetsAPI from '../services/StarWarsPlanetsAPI';\nexport const REQUISICAO_BEM_SUCEDIDA = 'REQUISICAO_BEM_SUCEDIDA';\nexport const FAZENDO_REQUISICAO_API = 'FAZENDO_REQUISICAO_API';\nexport const FILTRANDO_NOME_DE_PLANETAS = 'FILTRANDO_NOME_DE_PLANETAS'; // Levar em consideraçao a action pqEstáVindoDa API eDepois o reducer(verSeOsNomesEstãoCoincidindo)\n// Actions retornam objetos\n\nexport const fazendoRequicaoAPI = () => ({\n  /* Informa que eu estou fazendo uma Requisição na API */\n  type: FAZENDO_REQUISICAO_API,\n  fazendoRequisicao: true\n});\nexport const requicaoBemSucedida = planets => ({\n  /* Informa que a requisição foi bem sucedida */\n  type: REQUISICAO_BEM_SUCEDIDA,\n  data: planets\n  /* Puxando o results da StarWarsPlanetsAPI.js */\n\n});\nexpo; // Actions creator retorna uma função\n\nexport default function fetchAPIStarWarsPlanets() {\n  /* essa função acima chama a Api que está em services/StarWarsPlanetsAPI.js */\n  return dispatch => {\n    // Ação sincrona para verificar a requisição\n    dispatch(fazendoRequicaoAPI());\n    console.log(requicaoBemSucedida());\n    return StarWarsPlanetsAPI() // Ação assincrona para receber informações da API\n    .then(planet => dispatch(requicaoBemSucedida(planet.results)));\n  };\n}\n/* Estrutura retirada dos exercícios do bloco 16 */","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/actions/action.js"],"names":["StarWarsPlanetsAPI","REQUISICAO_BEM_SUCEDIDA","FAZENDO_REQUISICAO_API","FILTRANDO_NOME_DE_PLANETAS","fazendoRequicaoAPI","type","fazendoRequisicao","requicaoBemSucedida","planets","data","expo","fetchAPIStarWarsPlanets","dispatch","console","log","then","planet","results"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,gCAA/B;AAEA,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CACP;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,OAAO;AAAE;AACzCC,EAAAA,IAAI,EAAEH,sBADiC;AAEvCI,EAAAA,iBAAiB,EAAE;AAFoB,CAAP,CAA3B;AAKP,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,KAAc;AAC/C;AACAH,EAAAA,IAAI,EAAEJ,uBAFyC;AAG/CQ,EAAAA,IAAI,EAAED;AAAS;;AAHgC,CAAd,CAA5B;AAMPE,IAAI,C,CAEJ;;AACA,eAAe,SAASC,uBAAT,GAAmC;AAClD;AACE,SAAQC,QAAD,IAAc;AAAE;AACrBA,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYP,mBAAmB,EAA/B;AACA,WAAOP,kBAAkB,GAAE;AAAF,KACtBe,IADI,CAEFC,MAAD,IAAYJ,QAAQ,CAACL,mBAAmB,CAACS,MAAM,CAACC,OAAR,CAApB,CAFjB,CAAP;AAID,GAPD;AAQD;AAED","sourcesContent":["import StarWarsPlanetsAPI from '../services/StarWarsPlanetsAPI';\n\nexport const REQUISICAO_BEM_SUCEDIDA = 'REQUISICAO_BEM_SUCEDIDA';\nexport const FAZENDO_REQUISICAO_API = 'FAZENDO_REQUISICAO_API';\nexport const FILTRANDO_NOME_DE_PLANETAS = 'FILTRANDO_NOME_DE_PLANETAS';\n// Levar em consideraçao a action pqEstáVindoDa API eDepois o reducer(verSeOsNomesEstãoCoincidindo)\n// Actions retornam objetos\nexport const fazendoRequicaoAPI = () => ({ /* Informa que eu estou fazendo uma Requisição na API */\n  type: FAZENDO_REQUISICAO_API,\n  fazendoRequisicao: true,\n});\n\nexport const requicaoBemSucedida = (planets) => ({\n  /* Informa que a requisição foi bem sucedida */\n  type: REQUISICAO_BEM_SUCEDIDA,\n  data: planets, /* Puxando o results da StarWarsPlanetsAPI.js */\n});\n\nexpo\n\n// Actions creator retorna uma função\nexport default function fetchAPIStarWarsPlanets() {\n/* essa função acima chama a Api que está em services/StarWarsPlanetsAPI.js */\n  return (dispatch) => { // Ação sincrona para verificar a requisição\n    dispatch(fazendoRequicaoAPI());\n    console.log(requicaoBemSucedida());\n    return StarWarsPlanetsAPI()// Ação assincrona para receber informações da API\n      .then(\n        (planet) => dispatch(requicaoBemSucedida(planet.results)),\n      );\n  };\n}\n\n/* Estrutura retirada dos exercícios do bloco 16 */\n"]},"metadata":{},"sourceType":"module"}