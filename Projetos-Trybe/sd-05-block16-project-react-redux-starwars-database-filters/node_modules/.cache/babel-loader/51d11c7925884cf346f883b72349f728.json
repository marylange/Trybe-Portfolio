{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchAPIStarWarsPlanets from '../actions/action';\nimport Headers from './HeaderTabela';\nimport FiltrosDaPagina from './HeaderPagina';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const StarWarsPlanetsAPI = this.props.StarWarsPlanetsAPI; // console.log('api', StarWarsPlanetsAPI);\n\n    StarWarsPlanetsAPI();\n    /*\n    componentDidMount,quando montado, toda vez que o\n    componente é renderizado é feita umaChamada na API.\n    */\n  }\n\n  renderTable() {\n    const data = this.props.data;\n    return data.map(planet => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, planet.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, planet.rotation_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, planet.orbital_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, planet.diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, planet.climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, planet.gravity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, planet.terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, planet.surface_water), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, planet.population), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, planet.films), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, planet.created), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, planet.edited), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, planet.url)));\n  }\n\n  render() {\n    const fazendoRequisicao = this.props.fazendoRequisicao; // console.log('table', this.props);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FiltrosDaPagina, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Headers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.renderTable())), fazendoRequisicao && 'Loading...');\n  }\n\n}\n/*\n  {fazendoRequisicao && 'Loading...'} enquanto fazendoRequisicao\n  for true, o texto loading vai aparecer na tela.\n*/\n\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/* os states que vou usar mapStateToProps vem do reducer initial_state*/\n\n/*\n  O valor do state do verificandoRequisicaoAPI\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\n\n\nconst filtraPlanetas = (planetas, filtroDeTexto) => {\n  // console.log('planetas', planetas)\n  let planetasExibidos = planetas;\n\n  if (filtroDeTexto !== '') {\n    planetasExibidos = planetasExibidos.filter(planet => planet.name.toLowerCase().includes(filtroDeTexto.toLowerCase()));\n  }\n\n  return planetasExibidos;\n};\n\nconst mapStateToProps = state => ({\n  fazendoRequisicao: state.planetsReducer.fazendoRequisicao,\n  data: state.planetsReducer.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets())\n});\n\nTable.propTypes = {\n  data: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired,\n  fazendoRequisicao: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","PropTypes","fetchAPIStarWarsPlanets","Headers","FiltrosDaPagina","Table","Component","componentDidMount","StarWarsPlanetsAPI","props","renderTable","data","map","planet","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","render","fazendoRequisicao","filtraPlanetas","planetas","filtroDeTexto","planetasExibidos","filter","toLowerCase","includes","mapStateToProps","state","planetsReducer","mapDispatchToProps","dispatch","propTypes","arrayOf","isRequired","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,uBAAP,MAAoC,mBAApC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,kBADU,GACa,KAAKC,KADlB,CACVD,kBADU,EAElB;;AACAA,IAAAA,kBAAkB;AAClB;;;;AAID;;AAEDE,EAAAA,WAAW,GAAG;AAAA,UACJC,IADI,GACK,KAAKF,KADV,CACJE,IADI;AAEZ,WAAOA,IAAI,CAACC,GAAL,CAAUC,MAAD,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAM,CAACC,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,eAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,cAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,QAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,MAAM,CAACK,OAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,MAAM,CAACM,OAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,MAAM,CAACO,OAAZ,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,MAAM,CAACQ,aAAZ,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,MAAM,CAACS,UAAZ,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,MAAM,CAACU,KAAZ,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,MAAM,CAACW,OAAZ,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,MAAM,CAACY,MAAZ,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,MAAM,CAACa,GAAZ,CAbF,CADK,CAAP;AAiBD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,iBADD,GACuB,KAAKnB,KAD5B,CACCmB,iBADD,EAEP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,WAAL,EADH,CAFF,CAJF,EAUGkB,iBAAiB,IAAI,YAVxB,CADF;AAcD;;AAjDiC;AAoDpC;;;;;AAKA;;;;;AAKA;;AACA;;;;;;;AAMA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,aAAX,KAA6B;AAClD;AACA,MAAIC,gBAAgB,GAAGF,QAAvB;;AACA,MAAIC,aAAa,KAAK,EAAtB,EAA0B;AACxBC,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAyBpB,MAAD,IAAYA,MAAM,CAACC,IAAP,CACpDoB,WADoD,GACtCC,QADsC,CAC7BJ,aAAa,CAACG,WAAd,EAD6B,CAApC,CAAnB;AAED;;AAED,SAAOF,gBAAP;AACD,CATD;;AAWA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,iBAAiB,EAAES,KAAK,CAACC,cAAN,CAAqBV,iBADN;AAElCjB,EAAAA,IAAI,EAAE0B,KAAK,CAACC,cAAN,CAAqB3B;AAFO,CAAZ,CAAxB;;AAKA,MAAM4B,kBAAkB,GAAIC,QAAD,KAAe;AACxChC,EAAAA,kBAAkB,EAAE,MAAMgC,QAAQ,CAACtC,uBAAuB,EAAxB;AADM,CAAf,CAA3B;;AAIAG,KAAK,CAACoC,SAAN,GAAkB;AAChB9B,EAAAA,IAAI,EAAEV,SAAS,CAACyC,OAAV,CAAkBC,UADR;AAEhBnC,EAAAA,kBAAkB,EAAEP,SAAS,CAAC2C,IAAV,CAAeD,UAFnB;AAGhBf,EAAAA,iBAAiB,EAAE3B,SAAS,CAAC4C,IAAV,CAAeF;AAHlB,CAAlB;AAMA,eAAe3C,OAAO,CAACoC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClC,KAA7C,CAAf;AACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchAPIStarWarsPlanets from '../actions/action';\nimport Headers from './HeaderTabela';\nimport FiltrosDaPagina from './HeaderPagina';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const { StarWarsPlanetsAPI } = this.props;\n    // console.log('api', StarWarsPlanetsAPI);\n    StarWarsPlanetsAPI();\n    /*\n    componentDidMount,quando montado, toda vez que o\n    componente é renderizado é feita umaChamada na API.\n    */\n  }\n\n  renderTable() {\n    const { data } = this.props;\n    return data.map((planet) => (\n      <tr>\n        <td>{planet.name}</td>\n        <td>{planet.rotation_period}</td>\n        <td>{planet.orbital_period}</td>\n        <td>{planet.diameter}</td>\n        <td>{planet.climate}</td>\n        <td>{planet.gravity}</td>\n        <td>{planet.terrain}</td>\n        <td>{planet.surface_water}</td>\n        <td>{planet.population}</td>\n        <td>{planet.films}</td>\n        <td>{planet.created}</td>\n        <td>{planet.edited}</td>\n        <td>{planet.url}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    const { fazendoRequisicao } = this.props;\n    // console.log('table', this.props);\n    return (\n      <div>\n        <div>\n          <FiltrosDaPagina />\n        </div>\n        <table>\n          <Headers />\n          <tbody>\n            {this.renderTable()}\n          </tbody>\n        </table>\n        {fazendoRequisicao && 'Loading...'}\n      </div>\n    );\n  }\n}\n\n/*\n  {fazendoRequisicao && 'Loading...'} enquanto fazendoRequisicao\n  for true, o texto loading vai aparecer na tela.\n*/\n\n/*\n  mapStateToProps faz o papel do subscribe no redux\n  e no react faz papel no render\n*/\n\n/* os states que vou usar mapStateToProps vem do reducer initial_state*/\n/*\n  O valor do state do verificandoRequisicaoAPI\n  vai ser três infos(o state, o reducer que\n  contêm a action e a action que quero)\n*/\n\nconst filtraPlanetas = (planetas, filtroDeTexto) => {\n  // console.log('planetas', planetas)\n  let planetasExibidos = planetas;\n  if (filtroDeTexto !== '') {\n    planetasExibidos = planetasExibidos.filter((planet) => planet.name\n      .toLowerCase().includes(filtroDeTexto.toLowerCase()));\n  }\n\n  return planetasExibidos;\n};\n\nconst mapStateToProps = (state) => ({\n  fazendoRequisicao: state.planetsReducer.fazendoRequisicao,\n  data: state.planetsReducer.data\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  StarWarsPlanetsAPI: () => dispatch(fetchAPIStarWarsPlanets()),\n});\n\nTable.propTypes = {\n  data: PropTypes.arrayOf.isRequired,\n  StarWarsPlanetsAPI: PropTypes.func.isRequired,\n  fazendoRequisicao: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n/* Estrutura retirada dos exercícios do bloco 16 */\n"]},"metadata":{},"sourceType":"module"}