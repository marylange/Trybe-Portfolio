{"ast":null,"code":"var _jsxFileName = \"/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { setValueOptions } from '../actions/actionFilterPlanetsName';\nconst columns = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({\n      column: event.target.value\n    });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({\n      comparison: event.target.value\n    });\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  renderProcurar() {\n    const dispatchSearch = this.props.dispatchSearch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Procurar: \"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      onChange: event => dispatchSearch(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n  /*\n  A função renderColumns faz a filtragem \n  */\n\n\n  renderColumns(filters) {\n    console.log('cu', filters);\n    const currentFilterColumns = filters.map(filter => filter.column);\n    console.log('cu', currentFilterColumns);\n    return columns.filter(option => !currentFilterColumns.includes(option)).map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, option));\n  }\n\n  renderFiltrosValoresNum() {\n    const _this$props = this.props,\n          dispatchFilterValues = _this$props.dispatchFilterValues,\n          filters = _this$props.filters;\n    console.log('gggg', filters);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      onChange: this.handleColumnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderColumns(filters)), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      onChange: this.handleComparisonChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"igual a\")), React.createElement(\"input\", {\n      type: \"number\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"button-filter\",\n      onClick: () => dispatchFilterValues(this.state.column, this.state.comparison, this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.renderProcurar(), this.renderFiltrosValoresNum());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.ReducerFilter.filterByNumericValues\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSearch: name => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (column, comparison, value) => dispatch(filterValues(column, comparison, value))\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  dispatchSetValueOptions: PropTypes.func.isRequired,\n  options: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);","map":{"version":3,"sources":["/Users/marylangeleal/Trybe-portfolio/sd-05-block16-project-react-redux-starwars-database-filters/src/components/HeaderPagina.js"],"names":["React","connect","PropTypes","filtrarPlanetsName","filterValues","setValueOptions","columns","FiltrosDaPagina","Component","constructor","props","state","column","comparison","value","handleColumnChange","bind","handleComparisonChange","handleValueChange","event","setState","target","renderProcurar","dispatchSearch","renderColumns","filters","console","log","currentFilterColumns","map","filter","option","includes","renderFiltrosValoresNum","dispatchFilterValues","render","mapStateToProps","data","planetsReducer","ReducerFilter","filterByNumericValues","mapDispatchToProps","dispatch","name","propTypes","func","isRequired","dispatchSetValueOptions","options"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filtrarPlanetsName } from '../actions/actionFilterPlanetsName';\nimport { filterValues } from '../actions/actionFilterPlanetsName';\nimport { setValueOptions } from '../actions/actionFilterPlanetsName';\n\nconst columns = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nclass FiltrosDaPagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: '',\n      comparison: '',\n      value: 0,\n    };\n    this.handleColumnChange = this.handleColumnChange.bind(this);\n    this.handleComparisonChange = this.handleComparisonChange.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleColumnChange(event) {\n    this.setState({ column: event.target.value });\n  }\n\n  handleComparisonChange(event) {\n    this.setState({ comparison: event.target.value });\n  }\n\n  handleValueChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  renderProcurar() {\n    const { dispatchSearch } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"search\">Procurar: </label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          onChange={(event) => dispatchSearch(event.target.value)}\n        />\n      </div>\n    );\n  }\n\n  /*\n  A função renderColumns faz a filtragem \n  */\n  renderColumns(filters) {\n    console.log('cu', filters);\n    const currentFilterColumns = filters.map((filter) => filter.column)\n    console.log('cu', currentFilterColumns);\n    return columns\n    .filter((option) => !currentFilterColumns.includes(option))\n    .map((option) => <option value={option}>{option}</option>)\n  }\n\n  renderFiltrosValoresNum() {\n    const { dispatchFilterValues, filters } = this.props;\n    console.log('gggg', filters);\n    return (\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          onChange={this.handleColumnChange}\n        >\n          {this.renderColumns(filters)}\n        </select>\n        <select data-testid=\"comparison-filter\" onChange={this.handleComparisonChange}>\n          <option disabled selected>Comparação</option>\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n        <input type=\"number\" data-testid=\"value-filter\" onChange={this.handleValueChange} />\n        <button\n          data-testid=\"button-filter\"\n          onClick={\n            () => dispatchFilterValues(\n              this.state.column,\n              this.state.comparison,\n              this.state.value,\n            )}\n        >Filtrar</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderProcurar()}\n        {this.renderFiltrosValoresNum()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('filterByNumericValues', state);\n  return {\n    data: state.planetsReducer.data,\n    filters: state.ReducerFilter.filterByNumericValues,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSearch: (name) => dispatch(filtrarPlanetsName(name)),\n  dispatchFilterValues: (\n    column,\n    comparison,\n    value,\n  ) => dispatch(filterValues(column, comparison, value)),\n});\n\nFiltrosDaPagina.propTypes = {\n  dispatchSearch: PropTypes.func.isRequired,\n  dispatchFilterValues: PropTypes.func.isRequired,\n  dispatchSetValueOptions: PropTypes.func.isRequired,\n  options: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltrosDaPagina);\n"]},"metadata":{},"sourceType":"module"}